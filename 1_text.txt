transcript 0: 一回積んどかないラジオ始めますよろしくお願いしますよろしくお願いしますとまず簡単に自己紹介からや番組出演金番組で原稿用紙ないですけどこの番組は積読って言うねあの素晴らしい日本語があって本を買って積んで読まない状態のことを積んどくニュースけどそれをアンチ積んどかないということでまあなるべく頑張って読んでてせっかく選んだのならばそれをちょっとゲストに話してアウトプットして行こうかなという試みで進めていこうかなと思ってますはいじゃあそんな感じでで自己紹介なんですけれども私加藤の加藤と申します佐賀県金沢市中心で活動していますが無職県フリーランスエンジニアって何なるべく無職っていうことにしていますあなんかこだわりが
transcript 0: なんかあんまりもう一つの会社さんと付き合わないようにしてるというかわざとそうにしてますでも94年ぐらいに高校生になって Windows 95高校生の時に味わってねそのまま大学行ってで色々あってパッケージベンダーに就職してねそのまま転勤で館品川辺りで潰したんですけれども優れ5年ぐらいで辞めてしまう件に帰ってきてでそっから降り出すやってる会社にまた戻ったりいろいろしながら生 B to B から筆子だくさんが望む落ち葉環境がに最適と思ったものをいろんな言語は色眼鏡を使ってダイヤル式ましたてそんな感じの人が言葉の夫婦だということでよろしくね今日のゲストは一発目なんですが金沢ある日でご一緒していただいてね渡辺さんでいいですかはいはいまた鍋さんです
transcript 0: すいませんが簡単に自己紹介よろしくお願いいたしますそれはちょっと質問なんですけど本のタイトルは後の方になりますこの本は本を散策しますか男の本をやろうと思ってて今回のゲストもなさそうですねそれはですね唇ビーチ方がやります北いろんなゲームをやってきたんですけれどもこの effective シリーズ大好きで自分から足を入れたんですけどもマーケティングの意味があるんでしょうけども気分何とかって結構あってその中でも僕ずっと薄いブラとかしちゃうと Java の世界に生きてきてその中でルビー入ってるものを出したときだけこれを読んだ時に一番自分が一番住んでいた世界と違う哲学のところに入ってるなーっていうのは感じた本など
transcript 0: 幸いにして今ルビー中心で仕事もカナダで受けてる市加沢ある日っていう場所もあるしヘビーな内容になるかもしれんちょっと上級者向けの本なんでなるかもしれないけどなるほどそういうのもあるのかっていう気持ちを他の言語から来たら空いたんでこの気持ちをね誰かに伝えたいという気持ちで一発目は出てきてくれると思っていますそんな中で飾る日でご一緒している渡辺さんということで今日のゲストは渡辺さんですはいよろしくお願いします7名ですよろしくお願いしますお願いしますとネット上では主に wtnb でだいたいの ID を取って活動してます会える人の出会いは結構古いんですけどその前もあってパソコン通信の時代に色々テキスト処理をやってましてそこからハマってユニ
transcript 0: いろんなツールを触ったりとか LL write wait a bit COLOR Web の世界に入って今も金沢市内の情報系の会社でユーザー向けの Web をやったりとか最近はあの社内向けに色々業務もありのお仕事もやってるんですけどそんな感じで UNIX とか Ruby とかめぐとかいう間に終わってます一応認定 Ruby GOLD プログラマーでしたっけね5年前とかまだ入ってませんの時ほどで5年ぐらい前脛の無料一応持ってはいません感じです今日好きなルビーのメソッドはオブジェクトの=三つ並んでる奴らがそれは今日の話題についてもう一発目に引っかかる的なことなんで是非よろしくお願いしますよろしくお願いします
transcript 0: まで釈迦に説法と言うかこのラジオこの本にこう書いてあるんやはた時に次行ってみたいになっちゃうときついんであれなクズ高僕が逆に教えをいただく程度ゲストを選べて本当に今日は良かったと思いますでは早速いきましょう8 Introduction からなんですけどもまぁはこの本はどういう人向けに書いてあるとかそういうことが書いてあるな本なんですけれども一応これ2015年1月に日本語訳が出たんですけど現場は2014年10月文章中は使って Ruby のバージョンは1.9点3位52点1位ということになってますサンプルは特に注意書きがなければ2.1でもいますよということで Introduction の文章をちょっと泣くとほとんどの言語はよく見られる問題を解決するため独特の方法を持っておりルビーもその例外ではないとやっぱりなんで解決したい問題とかはやりたい
transcript 0: 総じて元号があるってさそれでルビーますお願いしたいですよって事であと危険を避けながらルビーのやり方で問題を解決する方法を学ぶならこの段階では危険を避けながらってのよくわかんなかったんすけどてんって何なんスか何かやらかすことありますかすって言うかそうですねそれを最初に言ったって良いのかってのあるんですけどあのルビーてわりとその作り手に自由を与えるものとこれあの UV さんってご存知ですかゆっくりして申し訳ないですあの昔ルビーの1.9連休のメンテナーもやられててあの今何やってるかなんですけどあはは有名な入門書も書かれてるたんですけどその人と
transcript 0: 意見同じなんだけど自分の膝を打ち抜けるって言うのは言い方をするんじゃないかなとかよくその日出てきますよね自分の足を打っていう俺が可能な言語っていう一部の Ruby 使いの人は割と好んでするんですよねそういう意味では危険だ危険かなって変な覚え方しないってことなのかなそういうわけで10番に変えたんですけど入門書じゃなくても構文とか構造を理解することを前提として書かれてますよという風になってますループの書き方が分かんないとか関数の定義とはクラスがモジュールが出ている一枚とかできんできないとかそういう人は対応してなくても書けるんだけどこういう書き方で合ってんのかなっていう時に出る日って ID があるわけじゃないんでほとんどの音変えすぎ
transcript 0: 環境って ID 勝手にクリックしてクラスの作成ってあったらもうテンプレ通りにパッとマイクラ作ってくれるんですけどもうそういうのないんでこんなんでやってんのかなっていう気持ちにはすごいなる言語だと思うよなんでそういう人向けの本ですということで飯大体の FF シリーズおそうなんですけどもあなたの Ruby をより輝かせる48の特別な方法となりますこれがあってここかなと思いますはいはい第1章ルビーに体を鳴らすなんですけどちょっと待ったその前に私呼んでないですね残念ながらと言うかアイルビーの人は全員呼んでるって勝手に思ったんですけどそんなもんじゃないですからこれはどうなんでしょうねその場合もグラフ勉強のだけの可能性も高いですけど最近あんまりルビーの本は読んでないんですね
transcript 0: なんだろう Ruby 勉強し始めた時にあんまり本とか読まずに勉強しようって思ってた時期があってのことですあまり読んでないんですけど読んだのといえばビール角フォントアトリファクタリングのルビーエディションかなるほどねとなんといかんなメタプログラミング Ruby Ruby ruby の真髄な感じがしますね確かにそうですねなんとなくなるほどっかその辺ですね舞台頼んでるんだからあんまりそのルビーそのものみたいな本は読んでないんですけど実はこの本の第6章は testing で testing なんですけどこれはミニテストなんですよね新しいですねやっぱそうなんですねなるほどわかりましたでは
transcript 0: それなら僕も説明しがいがあると思うなんてでは早速いきましょうアイ杯第1章ルビーに体を慣らす書き出しとしてはどのくらいを学ぶときでも言語掘り下げて得意な部分を見つけることが大事ですよという話なんですけれどもパツ目一番あるだよなっていうのは項目1項目者の本の章立ての項目市ですね項目市ルビーは何を神と捉えているのかを正確に理解しようっていう人なんですけどもまあその方がよくできてて各項目ごとの最後に覚えておくべき事項自動車産業で松代ですまとめてあってそれを望まだいたいつまりこういうことなんやねってのは解っていいんですけどそれ読んじゃうともう終わっちゃうんで別ですけどそのなかでも特筆すべきことをちょっと話をかなと思ってますここにちゃんとルビーはホルストに料除くすべての値が真である
transcript 0: フォールスってフォレストに料除くすべての値が真であるとか英語でなんてないですかねこれ4レスホルダーキット for List Null を除くすべての値は TRUE Real って書いてあったのを意味わかんなくなるなるほどなるほどまあそういうのはすごく気になりました確かに一番最初になんか俺この言語わかってねーなっていうのは大体 if 文とかが俺が思ってる以上のとおりに動いてくれない薬ですかそうですねある時は濃い部分とか LOOP 文の中に書く子条件分岐の所を正しく書けるようになるっていうのが一番ベストだと思うんすけども注目すべき点はここにも書いてあるとおり零は何ですかのワインと数字の0数字の0がつる
transcript 0: 鳴子ダンスルビーはなりますね珍しくないっていうのは僕の気持ちなんですけどもそういうもんじゃないですかその9か前や珍しい日本ではありますよねですよねやっぱり丸呑みしましたよこの辺は僕がそういうもんなのかなって思うの見込み説明づけとしては最近あんまり言われないですけどあの純粋オブジェクト指向言語っていう言い回しと昔はちょこちょこしてたんですけどねそれほど寝たのでオブジェクトとしてさほどナスカ成さないかって言うので飲み込んだ気がしますね後にされる C 言語なんて決まってるのは
transcript 0: ZERO が false ですよって言うだけが決まってなくて Hi ZERO がフォレスターまたこれ難しく70が新技つるぎの方ですよと TRUE false フォールズの方ですよって待っててねそれ以外は全部映るようなそういう世界においておいて C 言語 if の後にいろんな何を書こうが今言ったことが満たせてればチョルルカフォーラスカで条件分岐かけるんですけれども何かを明示的に boolean を要求する言語ってあるんですかっていうブリアン片岡 S っていうことが要求されている文の後に会いのでそういうのじゃないですね俺は誰でもフォローさせその頃勘違いしてた
transcript 0: もうなんかこういうの出てくるみるで使って問い合わせするメソッド立つかとポジティブですかとか0ですかっていうメソッドめっちゃのじゃないすか後付で増やしたりいろんなことして増やしてると思うんですけれども何か何か僕がコード書くときはなるべく結局るみの世界 W って言わないとは思うけどというか坊主になるように頑張って書くんですけどもそれは皆そうなんじゃないですかそうじゃないそうですねあのメソッドではてながつくやつとかそうそうそうそう2でやってんだがつけば TRUE か false が帰って来るよねっていうのを期待して基本はそれを使うようには考えてますねそうですよねそうなんで if 文が動くどへんとなと思ったら大体僕はやらかすのはまぁこれなんですよたとえば文字列のレングスを見て一文字でもあったらトゥルーデ
transcript 0: 一文字もなかったら坊主にしたいなと思ってか書いてあって.レングスは格闘0文字だけど親指の世界はつる何で釣るのお兄ちゃんとか結構やるパターン30より大きいは書いてないそうそうそう0は悪いっていう気持ちがどうしてもあるし出ているかどうか忘れたか教えているはてなですけどもよく見ると false はどう区別するのっていう問題があって弱いフーかっこいいかっこ内科 if の後に似るか false かどっちっていう話になるんですけれどもその例えば館なんかこけた場合は false を返す何もエラーがなかったら見るを返すっていう結構辛い関数があったとしての労働はそういうの作っちゃった場合.ミルて書けばいいんですけどどっちにいるんでも反対できずにフォールズの場合はこっちにしたいと
transcript 0: 場合には TRUE か false か見るかっていう if 文 SWITCH 文を書かなきゃいけないと思いますけどもあの子とはもうその時点で大分負けてるからあるんですけど過食症がないそうなってるわなってる時に頭品であるのは false ==を使えとかホルス==ツナ子のルビー言語はちゃんとオブジェクトの比較演算子も上書きできるお祓いできるんでない==高くとちゃんとフォールズオブジェクト Ruby TRUE と false はキーワードとかテニスとかじゃなくてちゃんと弦は弦クラスのインスタンス出しフォールスフォールスクラスのインスタンス出し false ==って書くとそのインスタンスの==メソッドが呼ばれるから右と左逆に書くとオブジェクトの==フォレスト書くとオブジェクトの比較のメソッドが動いちゃってなんかいまいちよくわからんってことになるんでどうしても
transcript 0: ホルスと比較したい場合には false ==特別ありますはいもだいぶ負け負けてる気がするんですけどそうですねか書かないのではないでしょうかかないですねそうなんだよなぁこのサンプルでは個々のサンプルでは何かインスタンスを作った時に1000円札を作った時に法律家にいるかを返すんじゃねえよってそうやってやってますけどねなるほど大分辛い感じは確かにしますねそのなんだこのオーバーライドできちゃうからみたいな話ってなんか出そうにもそんなありますよね遊んでくるかどうかみたいなのは上書きできちゃうからなんだっけ最初に
transcript 0: かっこいい企画の段階ですがしてありませんが最近は多いけどほどでスクリプトとか PHP はだいぶ=演算子はつらい感じですねドライブ辛いですねるみの方はまだの直感的に使えるようにした結果だったんですよね多分ねあればそうですね何か PHP は多分めちゃくちゃ便利なように便利なように頑張った結果挙動が全然わかんない感じになってますねそれとも PSP 好きか嫌いか聞いててもいつかの日に行きますって書いてる段階でもうたい推して知るべしだけど僕はキラじゃないですよだけど特にありますか
transcript 0: 今書いてる言語とフロントエンド JavaScript とかなって挙動が違うから膿のコンテキストが追いつかなくて変な F 分解ちゃうって言うんですねるみべったりの時は JS パクト受け子ルーズになりがちですね逆に Ruby で帰っててもそんなにルーズに感じないんですけどねなんか割とみんな妹 JS のルビーもダイナミックであのゆるふわな形がないんだみたいな事を皆さんおっしゃるんですけど僕はルビーはきちっとオブジェクトのクラスがあるのでそんなに古くはじゃないよねっていう事をちょっと言ってはいるんですけどあんまりあのもっと片方した言語の方がするとあまり差は感じられない項目にはまさにその話かもしんないしねこの国はオブジェクトと煮るの関係の話なんですけどもあいまっこんなとこですかね大体分かっていただけましたそうです
transcript 0: ツラミはあのよく分かりません0は鶴っていうこれだけ覚えればこの書は OK かなって感じますこの項目からこそここたまルビーは0羽鶴これでオッケーだと思いますはいじゃあ13分喋りましたが次行きますか行きましょうを見た方がいいんですかね後でます止めずに行きますかはい今紹介したい項目2歳オブジェクトを扱うときには見るかもしれないということを忘れないにしようと余談ですけどもルビーは何でも美味しくオブジェクトが絡んだのエクステンドしたクラスですが何でも書いもう数値だろうが数字だろうが文字列だろうが文字だろうがも何から何までそうですよなので子引数とかその他もろもろでは立ってる時はもう絶対にいるの可能性はあるという話なのでここで説明されてるのが
transcript 0: ダックタイピングについて話しますけれどもこれダックタイピングで説明あったほうがいいすかねうんガーとなるというとそれがいるよねなんでダックタイピングってがとなればなりませんかとだけ歯が長であるとみなすぐらいでも説明がつくのはこのオブジェクトが何者かっていうのを調査しようとすると言っていいんかな調査しようとした時にこのオブジェクトはガードできますか泣きそうだったんだってこれは家長であるとみなすっていうことでいいですかねそうですねそうですねなんだろう僕がこのタイプでなるほどって思った話をしてもいいですか是非お願いします個人的には大好きなんですけどお金を触ってて思ったのは
transcript 0: 今メソッドロト1杯あれを持ってれば全部移入ミラブルってあるなるほどでいうのが当時ライブラリの段階でも決まってるんですよねあーなるほどね他の例えばストリングなのか何なのか何も関係なくとにかく1が呼べるかどうかだけで動きが決まってるって言うのあの自分で実際に動かして試してみた時にものすごく感心してなるほどねそういうことなのかって思った記憶があるのねそれまさに今この話してる内容で結局ダックタイピングでルビーはどういうことを着目するのってどういうのがいけてるんだっていう話以降結局さっき言った通りな至らないトラックだと今は違う下がったように21があればありだとあれじゃないとできないそうで今日できるとはいう話で終わり
transcript 0: 対象のオブジェクトが不特定のクラスのインスタンスであることを聞くなとか調べるなとはい例えば土今は亀さかを悟りだと何が笑った時にこれはアレをエクステンドしたクラスですかってのを調べちゃうとダックタイピングのとある日ぽくなくってなんかこれまでの殻付き言語っぽいとかそういうの調べるんじゃなくてコレスポンド2市の指定あレスポンド2っていうのはこのオブジェクトにこのメソッドはありますかって問い合わせするメソッドが Ruby にありますなんでそのオブジェクトに対してレスポンド2リーチとなればいじめたと思ってますかいいことあるといいとなくんだったらこれは列挙型だろうと別居できるかだからということでみんな頑張ってレスポンドツムを使えというのがバーコード第二子のいるかもしれないこと忘れていこうに返ってにいるかもしれないということを忘れないように気を付けにまず書いてあるでも現実じゃわかってきたから
transcript 0: メーターを全部このメソッドの中で使う関数があるかどうか全部レスポンドと白で調べるの通ってるとはもちろんそんな理由なくて普通に書いてのメソッドエラーでコケたらその例外を捕まえてくれという風に書くのがほとんどですよねという話なのでルビーはテストを重視してるんですけれどもそれはルールがこれですよという風にはこう書いてあります今は誰さんが教えてくれるのような話をどんどんやっていくにつれてああなるほどなと僕もだいぶふりをしてきたんですけれどもを最初に読んだときは全く納得はいかなくていやいやいやいやいやいやそんなこと言ったって何が誰か分かんなかったから何が誰かわかんないとこのオブジェクトにどんなことができるかわかんないじゃんっていうのはすごい思ってた子メソッド名が分かったからって俺がそれを期待した挙動するかどうかわかんないじゃんっていうのはすごい思ったんですけれども対応はそれを消すとの方に定義したり書いたりして頑張るんですよ
transcript 0: ちょっと今までルビーはちょっと何年か5年ぐらい行ってきてこのあと会議やって不要になったとこなんでまあそういうわけなんで寝るかもしれないって時はいるクエスチョンマークを活用してパネルの場合はどうにもなんないんでちゃんとそれを避けてくださいねっていう話ですねてこれる B 2.3より前なんでサンプルコードが結構辛くて METHOD CHAIN というかドットドットドットっていう風に伝えてくれないですかあれを全部111個ずついるかどうか調べて頑張ってって書いとりますがロードなんでしたっけご近所さんなんでしたっけこれ何かオブジェクト指向のなんかの原則にありましたよね直接呼べない人をチェックしてはいけないそんなんだって誰かの名前があるんですけどねって少なくとも窓が2個出たらもう外でしたっけ
transcript 0: コニカミノルタ値の Google が開いたかありましたね SOLID SOLID の原則だがそれっぽいですね今度ちょっと調べて貼っときますその他サイトでこのソリッドかなるほどなんかにありません入っていないかないっすねリスコフの置換原則の何か忘れてますね最近クリーンアーキテクチャを読んでその中にあったのは覚えてるんですけどそれは確かにもう大分負けてるからよろしくお願い文が知ってるオブジェクトのさらにそのものを無ジェクトまで知らなきゃいけないっていうのはもう第二も良くないですよね作り的にはとは言っても例えばビューのヘルパーとかあの辺は便利系はどうしてもねそういうチェーンを怒っちゃうんでそういう場合は&ドット柄黒豆んですよねっていうので2.3日以降はそれが増えたとのことだと思うけれども
transcript 0: 何だっけアクティブサポートのトライがやってる男子になった発色もできますよねいいですかなアレもできましたねあの辺が助かりますねとか H とかなんでわざわざメソッドがあるんだろうとわかるわかるなんとなく見えてくるもありますよねこういう場合はこうして欲しいんだってねあの辺はあると思いますさらにこれが僕の中では革命的だったんですけどもう二度と2 S とか2とかそういうのも活用したそれでいいよとレシーバーレシーバーって何から説明しなきゃいけないかな C 言語 C 言語では間違えのでもあるか CPU とか他の言語でいうと他の言語で言うとも他の言語でいってもレシーバーって言うんかなと思うんやけどあんまり行ったことのある B
transcript 0: よく出てきますよねルビーとかそのトークこの世界は話しながら OBJECT .なんとかオブジェクトメソッドって書くと大体そのオブジェクトに対してそのメソッドオブジェクトのメソッドが呼べるっていう風に言いがちですけれどもそのオブジェクトレシーバーと呼んでそのレシーバー名前の通りにそのオブジェクトに対してそのメソッド受け取らせるみたいなそんな感じですよね雰囲気としてはインスタンスメソッドのインスタンスですねそのインスタンスが切れの場合例えば C プラダと100羽貢献しているポイントアクセスなんてせ何でかって言うとあのオブジェクトの中にそのメソッドのジャンプ先継承した場合ここに行こうと過去に行こうってなってるんでいるオブジェクトとかも魅力ですちょっと前は9デニールに対して2 S とか杖って投げたらもうそんな感想を知らんって言ってもコケるしかないんですけれども
transcript 0: BEE BALM オブジェクトとされつまるところうまそうですねで普通に動作して対応したメソッドの結果返ってくるとあればそうですねめっちゃがこれが使えるようになって初めてルビー道に入った気がしましたなるほどねあーなるほどそうですよ文字列を受け取るメソッドなるとしてこれ文字列かどうかわからんって時に今までの僕行ったらおレングスを見るとかこれは文字列のインスタンスですかっていうの調べてさらにルルじゃないかチェックした上で操作初めてだと思うけども間違いなくそうしたんですけど DVD に入ってからはなんか知らんけどこのパラメータは文字列内のジャズ S 氏と9月って言ったんですしてその後処理するという風に変わりました発送がなるほどその時に初めてこれ実は一緒にそのお仕事してた人は入ってますよね加藤さんも自立した方がいいですよって言われ
transcript 0: 時々はどうですけどなるほどなーそういう世界なんだってなすごい思いました何かこれでも2 LOTS で着るべきかどうかって確かなんかちょっと議論になってた時もあった気がしますよほど寝たけどチョイスできたほうがいろんなとこ親父に欠ける気がしますけどねどうやってやったらも一つが来るんだよっていうのはなんとなく想像がつくそれ前提で世界は動くだろうかな照準のライブラリとか OBJECT or もこれをもってますよっていうことなのはもう言えるかと多分この後出てくると思うけどあれ Kernel . array array 括弧をつけると何でも入る姿になって帰ってくるっていうあれを使いこなすことでもうこれで配列が来ようが単一のオブジェクトが来ようが対応できるなとかそういうのはすごいルビー使ってる
transcript 0: 幹事になりましただけでここでのまとめは全部見るになりますよと全部見るになるんで2月とか2階とか2系とかそういうのがうまく使ってやりましょうという話とあと例のコンパクトに付かなくなる奴ですねどういう感じのやつを使いましょうという話ですのでコンパクトにしますね今の話とつながってくるんすけどいるパラメータが Null かどうかチェックしたい問題っていうのはたぶんこのシープラの世界行くとか Java の世界から来た人ってすっごい興味あると思うんすよそうなんだとそもそもその問題として塗るが来ないようにするっていう手法が沢山あるわけでもコンパイラの時点で弾くとそんなのはだめですっていうのでその日は来る可能性があるそれはテストでカバーと言われるとつらいなあっていう最初は思ったんですけどまぁこういうのもありかなっていうの気持ちになるまではだいぶ
transcript 0: 分かりましたそうですねまぁ確かになんでもかんでもいいフレスポンドゥトゥ出かけて言われるとだるいなっていう感じはしますのでそれはだるいなのは思わなくはなくってただルビーのままさっきも最初の方に言いましたけど自分で出しぶち抜けますよっていうのは確かにの事由があってで例えば引数はこの時だけ急に変わるみたいな挙動を許したい時に何でも解決したいんでよかったのコンパイル時とかないし全部実行じゃんって言うとしか考え方なので最初の段階で言語レベルで堅いガードが可能にはならない木は吸ってはいますね何で犬が辛いのは分かるんで例えば contract ジムっていうのがあるんで
transcript 0: アノテーションって言うんですか何か甘いものがくるよって言ってたりするこれちょっと今ググってもらうと分かると思うんであればとかは結構ねここはいいんじゃないのは来ますよとか行けますよねていうのを追加してガードするみたいなのはアメリカでやろうと思えばできるんですよ contract エムアイカードが得かなるほどねこのように語ったことあるなこれはこれで辛いんですけどね普段やってないことを何で最初にコレガチって固められちゃうと確かにネオンが壊れすごい不便じゃないみたいな感じになりましてこんなんでこれもうこの話が出来るかっていうと全然普段使ってないですけどミドルマンのバージョン4入れて自分で
transcript 0: そのカスタムのコレクションとかなんか色々作れんじゃねーかっていうのを試してみたよそのときにこの contract ジムにことごとく引っかかるんであろうレール角 end to end test の釣り海たらちょっとメニューは一個増やしただけでなんかエラーがめっちゃてるんですけどっていうのと同じで変更したらまともに動かすためめっちゃ時間かかっちゃうもんなんですねそれがあって成程僕はなのでロビーとズブズブなのでこれ入らんかなっていうことをもったってのがありましたねそれでいるを渡してくるとか期待した通りの動きをしないのは誰のせいだ問題ってのあるじゃないすかたい昔もっとリラックスでも多く CBS にでも多く市 Windows でも動くしていうような職場にいたんですそういうライブラリを作ってる会社に関するアビリティ
transcript 0: 堺市ゲコの行動を見たんですけれどもそうなると小ソフトが愛生ちゃんレイヤーがされるジャンスカ令和 C 言語のポジション OS のレイヤーのポジション OS ごとのレアなポジションとかっていうお仕事のレイヤーとかってこうなってくるんですけども後者の方の方々はそのパラメーターのチェックとかを支えるべくしないですよねそれなんでかってとこ速度を求めてるような職場だったからいつでもその UI 含めて作ってる人はなぜヒエラルキーがあってライブラリを作ってるのは昔ながらのベテランエンジニアねビュー周りやるのはなぜか新人エンジニアのお仕事だったんすよこれは今も多分変わってないのかもしれないけどなぜかそういうヒエラルキーがあったその結果何が起こるかっていうとなんか行った時にアプリがコケたら新人が全部調べなきゃいけない問題って
transcript 0: 明らかにパラメーターは合ってるはずなのに中でこけてますだから多分なんとかさんのせいですよっていう話をしたいのにお前新人だからお前がひどいこと言ってるやろっていう雰囲気になっちゃった別に実力のほどはどうかは置いといてですよ結局俺は悪くないっていう証明はみんなしなきゃいけないからみんな何かやりたいんですけどやっぱで切羽詰まってくるとどうしてもみんなのソースコード中に俺は悪くないぜソースコードがたくさん書かなきゃいけなくなってオーバーヘッドがどんどん増えていくという状況になっててしかもそれをやればやるほど変更に弱く流さない方も買って行かなきゃいけなくなっちゃう子引数のこのは null でよかったら何でダメになってこうなって歩こうになってっていうのはその失敗とかなんか高かったりする奴に関してはぶっちゃけ先方が提供してくるものでは自分が体動かせるものについては割とて
transcript 0: いるんですけどこの就職しようさっき言ったが得じゃないですけどもプランテーションとかこれで使えればこれを防げるなんて出来るんですけどもどんどんどんどん下のレイヤーに入っとけば入っていくことはできないんでどうしたもんだからどうしたら仲良く中には契約プログラミングってのがあるらしくてこのみんな大好きオブジェクト指向入門という本があるんですけれどもコンバートランド宮さんの方なんですけどもそれでは契約による設計っていう話があってどちらが事前条件を満たした状態で呼ぶと約束するならば廃止に事後条件を満たす状態を実現することを約束するという事らしいんですけれどもこれを原稿にしたプログラミングエーフェルトあるらしくてはこの人が設計した言語なんですけどもそれを使うとちょっと見たところにもう来たのすごい番ですよねもうこれを乱して来ないで俺は呼べないぞとでその代わり飲んだらこれを回すっていうのも明確にかけるそういうのをやった方が早い
transcript 0: ともう一つやんないほうが早いと思う人っていると思うけどもそうですねなんか最近は僕はさっきエンドツーエンドテストも含めてやっててある日の方がいいかなって気持ちになってくるところはめっちゃあればだけど人数の問題なのかなとかテストの領土問題なのかなとか色々まだまだ悩むところありますそうですね僕もそう言ってそんなに大規模開発をやってるわけではないので一緒に触ったらもうさんには第2位クックパッドさんとかねああいうところなんだかよくわからないものリスみたいな姉最近はマイクロサービスありますけどまぁモノリスで苦しいですみたいな時期は結構長くあったみたいですよね
transcript 0: MVC しか決めてないのでつらいよねあの一帯クラフト主義もともとルビーが大クラフト主義じゃないですか大きないっこのクラスで何でもやりますよっても違ってどんなに色んなクラス標準でないですよねテイルズもなんかそんな感じで今 activerecord が特にそうですけど一個のクラスがめちゃめちゃ滝野になりやすいので確かになった時に共同で一緒にやりますよっていうのはもっと難しいよねっていう気持ちはわかるよね一応ライブファイルに分ける人誰ですかモジュール分割的なこうすれば分業できるんでしょう的なところもあると思うんですけども基本的には確かに MVC 以外にクラスライブラリを一行おきたいんだけどと思ったらとたんにレールから外れてることなんですかねあれば最近はそのレールを伸ばすみたいな表現でもうちょっ
transcript 0: ちっちゃいビューモデルがどうとかサービスって言い方をしなくなりつつあるのかなあの最近読んだその clean architecture だとユースケース interactor とか嫌じゃないですかよそれを縦に着るみたいなと追加してあげるとのより考えやすくなるとどっちが勇斗&レン系のものが実は書いてあるんだけどこの部屋印はメソッドを呼ぶってことだろとかコールバックメソッド呼ぶことなんですけれどもとかどういうねそれとも tcpip のこいつ信濃とか色々思うことあるありますねでも契約骨っていう話は分かるは分かりますよねさっきの話に戻るとそのレスポンスって書きまくるのは確かに暗いのでまさにその通りですね programming by
transcript 0: トラックと書いてありますが本当なことでもみたいなアプローチもあるとは思うけれども標準では入らないんじゃないかなとグラビング by contract ですけど DESIGN by contract ますよねなんかぼくシークレット優香混むかマイクロソフトの Windows のテクノロジーのインターフェイスを定義した猫にするってやつ買ったんですけども何かそっちは限りなくこれに近いかなって気持ちになります今日はもうなになにはともあれとりあえずインターフェース定義して持ってこいと値段に実装するかつはまあその好きな言語にやればええやんというくらいのスタートでやってるって言うんでその考えに凝り固まって生きてるとルビーの世界っていきなり何渡してもいいのかなにが似るになってもいいとかパブリックメソッド一覧がないとか俺にはどうしたらいいんやってすごい
transcript 0: 最初は思いましたままとりあえずまぁ保育所行きました項目にはを切るを考えて武田で言った方がやり方は選べますよぐらいの感じなんだと思いますけどねはいそうですねやっぱり何十件とぐらいで項目二つで結構いましたねマダム広島戦やっぱ猫なんか本当に来たんですか今日はこのへんでもう1回目はこれぐらいにしておきたいと思いますはいじゃあ第2回もやらで弾き寝なさい愛の漫才をして
