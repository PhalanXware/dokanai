transcript 0: この Podcast はアンチ積読で本を読んでその内容をゲストに説明すると余裕 Podcast です簡単な自己紹介を参照したいゲストは渡辺さんです引き続きよろしくお願いしますよろしくお願いします前回ハンセンあれあの本のタイトルまた飛んでません本編を始める前に言ったらいいかななるほどなのでこの前は Skype で録音ボタンを忘れてましたなぁなんで私に苦労したんですけどまぁ結構そんな難しくなくちゃんと作れましたちなみにもう最近仕事でウェブに繋がらないかん今日は仕事にならないっていうのに良いをなってきていろいろ受けてる仕事が例えば Amazon S
transcript 0: 書けないとてそんなにないとかなんかしようと思ったらイベント取り出してメールを送るようになっててそのメールが繋がらないとなんかよくわかんない例外とが出ちゃうとかイマイチなんていうのはインターネットに繋がってないテストとかしないと出てこないものがあるなぁと思いつつもまぁ別にそこまで厳密にテスト前でも動けば OK なくらいの気持ちで生きてるといざ飛行機の上にタイトさがなくなるとやることがなくてね何をしたかって言うとこの番組の編集行って取って丸めて快適でしただ飛行機の爆音がうるさすぎてちょっとノイズチェックが甘かったかもしんないけどまぁそこはこれであと3016秒に飲ませてました今日も忘れてました今から皮膚科2019年6月23日日曜日
transcript 0: 22時17分次会日本の超感動しました怖いですよねこれ全てが揃ったことがまだ一回もないって京子揃ったはずなんでどうしていきましょうあと前回のフォロー明日けど===が暮らすノイズあと同じじゃん同じになるときがあるじゃんっていうことで使わないよなあとか言っといて言われてみると奇数の形を見てドリームだったらなんとかテックスライムだったらなんとかクラスだったらなんとか例えばメールとかやってて activerecord のレコードオブジェクトを渡ってきたのかレコード dig から渡ってきたのかと問えばそれによってうまいことするっていうメソッドてご親切心を出せば書けるじゃん例えばインドだったらまぁこれ多分 ID だろ夏なんて Find by
transcript 0: してそうじゃなくてオブジェクトだったらそのオブジェクトを操作するみたいなそういう時に使おうと思えば使えるし昔こだわってつくっ使ってた記憶もなきにしもあらずですけどでもそれで第1回が第2回の時に言ったクラスの読みたら負けっていうルールが重さも失敗してるかな良くないよねっていう話だそうですねだけど引数を見てあれこれしたんや引数の型を見てあれこれしたいって泣いてはわかりやすいとわかりやすく相次ぎヴォクシー Pro 2インターフェースってキーワードなんじゃないかなんですけど最近もありませんでした後純粋仮想クラスなんてあるのかなと思ったらまぁやっぱりなくて他に仮想クラス加速らスっていうのは仮想関数なって仮想関数何かっていうと C プラ特有とか C 言語得意の妄想ヨジャマンネタントクルとじゃがじゃが丸けど
transcript 0: くびれを手振って書いて中身がないで外かけるんですよそのクラスを入手しようとしたらお味噌がないからこれニューできねえかなって言って怒られた怒られるようになる俺は仮想クラスって言ってちゃんとエクステンド味を継承したクラスをちゃんと用意しないといけませんよっていうのが仮想クラスけど妄想ですインターフェースのイメージですねとは仮想関数純粋仮想関数など新しい用語はちゃんと正しく使いましょうというとこで会いたいよ本編では今日は駅ビル B の第3章コレクションなんですがえっとですね今日はガッツリ階段大項目16171829の2021081を全部まとめてきたんで今日はちょっと走るだけ
transcript 0: タイマーを2時21をあまりまだ見てなかったすいません今日の夕方ぐらいに一緒に行きました後間違ってるところは後で読んだらまた間違ってたんで買った書き直しのところもありますがそれはネタバレじゃなくて今から説明するんでそれで大会第3章コレクション Ruby を学ぶ時に平らに触るのはもう大体あれが走るでしょうとインコとか鳥の次はねそれが悪いとか発信とか特に肩がないと同じように10時にかけるんだおもしれぇなた後で操作する感想めっちゃたくさんあるんで操作するメソッドもたくさんあるなるほどなーと思って使ってるんだけどおそらく見落としてるかもしれないであろう機能を紹介とトラブルを起こさないようにする方法と場所レンジャー中級者を痛い目にあわせるいくつかの機能のために
transcript 0: 第三者ということで渡さんにも新しい発見があるとにしたい項目16コレクションを買って帰る前に1期生として渡さコレクションコピーを作っておこう俺でもいきなり説明がなくなるパターンなんですけどルビーのメソッドは何私が嫌いの方にはルビーのメソッドはたい私ではなく参照渡してあるただしフィックスなのは顕著な例外ですとあるんですけど僕の認識では Ruby は完全に値渡したそうですねメール便とか Ruby Magazine とか短所私は走るビーズとかでググると大議論が巻き起こっててあたいは男子ですけどっていう結論が出ててそういう世界において俺この本のソーマ障害
transcript 0: 参照渡してやるって言ってあるんで結構辛いなあと思ってるけどそうですねここで言いたいのはオブジェクトがわかってくるから中身を変えると変わっちゃうからねっていうことは言いたいよここで言う山椒がされているの会だけど変数1とか2とか星2を受け取って取り替えてもキスが関数終わった後にその中身変わってないから楽しもうとして値私じゃん言われたらそうだなってことかねその辺は上手くやっとるんかっていうのはうまくやってるんじゃなくてこれは値渡しなんだよっていうことがあったんですが何なんですがなんですがややこしいしたアドレスとか C 言語っぽいことを知らないといけないし勝つ
transcript 0: リンクって晴れるのかな誰もアンカーにリンク貼れると思って貼っときますけどロビイストマガジンの値渡しと参照私の違いを理解するっていうページが秀逸なんで好きで倖田から対応としたのに参照渡しといことができてるんだよっていうページがあるんでそれを読んで理解していただくということで値は確か三者私が議論というのは誰ここまでしておきましょうただし個々の方曰く渡ってきたオブジェクトとか悪いとか歌手とか中身変えちゃうと関数呼び出し田川のに引数に渡した奴が中身変わったのかなと注意だよっていうことがまず前提としてあるって言うかさそうですねなんでそうなんだっていうことにしといてねあのそれをしたくない
transcript 0: には側に渡ってきたものをあれこれあれこれした結果なかなか手が勝手に買ってるんだけど調整たい場合にはコピーを作りなさい後でだいたい良いと私誰かもしくは自分自身かレシーバーが中身変わる時のメソッドにはびっくりマークをつけるのがば親切心でビックリマークを見たら大体そういう意味だからまぁドキュメントちゃんと読んで正しく使いなさいよという話でここに乗ってのサンプルだと delete if を使って音消していると出るときはちゃんと消えますねでリフレブロックをまた渡してちゃんと動かすっと消えますが消えないのって何だっけあれほどリジェクトダイレクトはいはいエジプトブロックを渡すとそのものが除去された配列が
transcript 0: 帰るというのがリジェクト何でこれはもっと壊さないすよねそうですね8リファレンス見るとリプして delete if するのと同じだよだから delete if は本当にきえちゃん実は断ってきた際のフィルターしようと思ってリジェクトじゃなくて照りね降って書いちゃうといいよなんか勝手に俺の作った橋がないと寝れなくなっちゃう何でも注意しなさいよというの使うときは今の場合リジェクトっていうお家で用意したことあるけどそうじゃない場合には自分でちゃんとコピーを作っときましょうとさらにディープアプリケーション予約だから10分かなタップかわかんないけどのもしくはクローンはシャローコピーでステップ特老の違いを答えられますかってあれだろ俺全然答えられなかったんですけどクローンは元がフリーズされてたらレイプされてますし
transcript 0: アロマ特異クラスもコピーされるとそのオブジェクト自身に生やしたメソッドが入ってたらそれもコピーされませんだけどまあまあ降って困ることないてキョン読書家というお茶のコピーって何ぞという話なんすけど深くコピーしないと面的にコピーするんで配列の中に入れずからとかアッシュの中に入るやつがあるとかやってもハッシュ全体のコピーされるんじゃなくて発射して示される値がコピーされるだけなんで言ってやってやってよっしゃこれで走るのコピーもできたしバスの中の歩いを触っても大丈夫なのでやるといやいやそれ壊しちゃってるかなっていう風になるので注意しましょうというとか苦労するときはシャローコピーなんかそうじゃないのかっていうのは考えてやりましょうねっていう
transcript 0: アセットそれでも俺はコピーしたいんだとガチで友達のままシャルっていうのを使えば大人のオブジェクトはコピーできますよとディープコピーシャローコピーの対義語みたいなもんで中身も全部勝手に複製するというのがディープコピーだけで体の中のハッシュドが発祥の中で悪いとかそういう入り組んだやつをコピーしても完全にコピーが難しいんで安全に本当にコピーしたかったらバーチャルダンプして文字列を byte STREAM なのかちょっと待ったが関係無い方がないからわかんないけどママさんダンプして与えたものをマーシャルロードすればシリアライズしてですが覚めて元のオブジェクトが全然別のメモリ空間日本でできるんでそれを使いましょうというマーシャルっては割と何使うかって店 kvs とかでディズニーキャストとかなんかそういう
transcript 0: 富山結構使って珍しいメソッドが来てますでもないんだけど marshal dump できないクラスって郵便は用意してる声のライブラリーのクラスもうもあるんで注意してくださいねとなんでもかんでもまあちゃんとしてるほどできるかっていうとそうでもないので注意してくださいとかないというわけでコピー作りますか僕全然作んないですけどそうですねもういきなりこれの前提を消しちゃうとマップ使えばいいじゃんって言うとどうなった元のオブジェクトを書き換えたいっていうことを思わない常に新しいオブジェクトを作って返すっていう書き方にしようと後
transcript 0: シリアライズした結果を書く時ってだいたい外部サービス化データベースとかわレディース名鉄とか開け vs とかその他もろもろ優の話はい何が言いたいかっていうと引数で渡ってきたものの中身を変えちゃうというよりかは結局最後の最後までデータに設置しないことが多くないですかってくらいだったが捜査対象をメモリ上であれこれするんじゃなくてだいたい外部サービスの対象の ID を見つけてからそれを引っ張ってきて操作すると遠くねそれそれを言っちゃうとなんかそうですねどうなんだろうこの項目の話に一生懸命そうと思うとあの位置じゃなくてマップで新しいオブジェクト靴クローゼット言うことかなって言う
transcript 0: 項目16=コレクションお菓子帰る前に引数として渡すコレクションのコピーを作っておこうじゃなくてコレクションは書き換えずに新しいコレクションを作る者新しい配列新しいポジション作って返すメソッドて自分で作りましょうってことないんですそうですねまさに僕もそう思いますよろしいですからね本当にねまた超えた項目だいぶ前の項目でもあったと思うけどオブジェクトリードオンリーで渡すっていうのがないですよねるりは Java とかは C シャープ小さなにあると思うけど今掃除をしてねこれポイントの先はお前書き込むような作業をするんじゃねえぞっていうキスをしたくなるほどそれが先日の議論と同じでそれ渡辺さんが嬉しいかどうかって
transcript 0: パブリックプロジェクト問題と同じでそれ嬉しいかって言われると作ってるほうも読み方も関わることがないんだって安心して生活できるっていうレストランがあるんだけど何かあった時に彼女と形が変わるんで頑張らんといかんなと思ったらなるほどなんかでも最近ちょっとに論理の実装あるにはありません例えば activerecord とかも移動になりませんでしたっけいたかセレクトするときかなんかそういうのあったけどそれもまあ小純では多分無いと思いますけどねでも activerecord は気持ちがわかるんですよそうなりそうなり演算子とか末尾に追加する系でなんかいつのまにかはデータベースのレコードがアップされてる方あるじゃないですか Association が作られちゃうとか
transcript 0: それを理論で防げるのかどうかわかんないけど俺そんなつもりないのにモデルを生打ってやる前にそうなっちゃったんだっていう気持ちは結構あったかいねびっくりマークついてたらねという気持ちになるんですけど演算子オーバーロードしたちょっとねそうなるとかでいきなりデータベース登録三大合併とナットインサートとは書いてあるので行きました話がそれましたねすいません8月コレクションお菓子買いに行きます飛行機を作っておこうは周り我的には書き換えるなってませんけどして造って書いてあってそうだと思いますね僕もそう思いますね相次ぎ重く17を参照渡し値渡しはもう去って行く感じでいいんですねいいですね寿司とかアニメとかホワイトボードとかなしで
transcript 0: 説明する自信は全くないしまぁそうねなんか全然すごい単純わかってしまうと単純な話だなぁとこれ読んでて思ったんですよね何が単純でリテラルがいきなりオブジェクトになるのでいきなりオブジェクトになるその心は多分その日の難逃れないっていう考え方するんじゃなくてオブジェクト自身を書き換えるメソッドがあるかないかだけを見ればいいような気はしてます受け取り方が参照渡しとか与え私っていうこと気にするんじゃなくて返し方ナウ受け取った引数に代入しようとすると大にした瞬間にもうそのそも新しいオブジェクト作っちゃってるから別物なんですよね
transcript 0: なんだけど途中を書き換えるっていうのはいろんなオブジェクトでクラスで可能であればそれで書き換えてるぶんには元のが関わってるように見えるよねって言ってるだけのような気がするんですけどね値渡し参照渡しの説明する通じますか嫌だから渡す仕方としてはあの参照の値渡してまんまんだいた結論でてるけど渡されたんじゃなくて作って返してたらもう別もんやでって言ってもとで走る流してそのオブジェクトを返せば出し入れそれがその数値の代入みたいなのがやっちゃうと顕著にそれが違いとしててるってストリングでも同じことなんですけどソニングが渡って来てストリング新しい string 代入したらもう別のオブジェクトになっちゃうけどそれはリプレイスできるからリプレイスすればもう空本のやつ壊れるよねっていう
transcript 0: そうなんですよ本当にそれすっかり忘れてたわそれが起きやすいのがそのアレイの例えば引数添字市華壱番目の添え状これにするみたいなのも履き替えだから壊れなんだけどビックリマーク系の奴は堅調だけど歌手とかアレとかの添字を書き換えるというのも同じですねパパそこだけに注目本当はした方がいいんじゃないかなっていう気はしてますよよくある間違いがチープなとかですよたとえば関数あるじゃんすーがあってポインターを作るとポインターを用意して適当なアドレス台にするとたとえばキャラクター配列10ハローワールド変数名ハローワールド=文字列がハローワールドっていうものを大事にするって言っとき初期値を与えるって言う
transcript 0: 忠純という文字列ハローワークとってもの値段ハローワールドって言ったら何が買えるかって言うともう正体不明なものが買えるんだなんでかって言うとかんち言語って関数抜けた時点でその切符買ったトラックに積んであった変数が飛んじゃうからねなんでも下文字列を作って会社があったら malloc とか文字列の入試てそのポイントを返さなきゃいけないです何でその入社とかポイントの先をどこに道を確保したかっての頭にないと正しくないコードかそれと同じでこれは断ってきたアドレス参照であるこれをこの今の==演算子を書くことによってこれ俺の演算俺の用意したオブジェクトに置き換わった
transcript 0: お花を着替える前に操作してるなーっていうのが頭の中にないとすごいバグルやろなと思い特に良くスタッフの変数とかヒープの変数とかこのオブジェクトはどこにあるんやっていうのは頭にないと資源勝手にまわし言語中のそういうのはコントロールできるから良い堅固なんですけどそういう知識がない奴が書くとすぐ変な奴が動いてしかも最近はもうメモリアクセス例外とかですぐ死んでくれるけど昔は普通に他の動いて謎の文字列が埋まってるとかは謎ですが動いてるとなると思うてだいぶこれを知ってないと使えないスタート付どマギ B とかだと便利すぎて使っててある日突然なんか変じゃないって気付くっていうのあるかなところに入ったが園芸に行けると思うので何個でこの値渡し参照渡しずっと納得いかないとね
transcript 0: いやそうじゃなくてルミネ考える時にはかえってややこしくなるなってそんなこと書かない方がいいかでもなんでって気持ちになるよね一番早いんでさらに言うとそういうのは就職して書かなきゃいけない県五反田キャバとか BCC とか何とかとするとさっきも言ったとおり read only のオブジェクトを受け取るメソッドを定義するときには食べばユーザーってオブジェクトすると const ユーザーとか書く理由とするとそれを見た女子初心者が混んストって何ですかって言うとろくな始まるんでまぁでオブジェクトを受け取ってから伊予返すだけのメソッド一個作るだけでも説明が死ぬほどいるコンピューター
transcript 0: 何だったけどしっかりもこんな便利なことはないって言ってプログラミング入門にルビーがいいのかもしれないとかっていうのは男なんかなと思ったけどとりあえず動かすのに必要なあの予約が少ないのは僕もいいなと思ってますね駐車場が少ないとなったからどっか行っちゃいましたけど5年生の漢字で値渡しと参照渡しについて議論したい人は奥まで連絡くださいではでも付き合いたい項目17見る scala OBJECT を配列に変換するにはあれ夢外を使いましょうですけど array メソッドってまだ使えます使わないっすね僕めっちゃ使うんですけど対象 array 括弧開く歩いての大文字で始まる文括弧開く何らかのオブジェクト格好
transcript 0: 都市ルカくんちにも言ったんですけどちょっと待ってくれキャストもへったくれもとその形がないやんと思って最初はそう思ったんですけど動く内容を見るとはーなるほどなという風に思いちなみにこの array メソッドカーネルに入ってるアニメソースで普通にハーレー括弧開く例えば二硫化この渋滞何とか出てきますとその動作は何かっていうと見るを渡すとからっぽと配列の配列を渡すとなんとからっぽの入れたまま帰ってくるとはどういう風に育ってるかっていうとまず当たってきたオブジェクトに2つあり2 US 4 a r 2 A R 4 a r 7それを選んでどっちも
transcript 0: カギ括弧開くあること教えて囲んで返すという思想になって何が嬉しいかっていうとたとえばピザクラストを作りますが皆大好きピザピザピザとする時にトッピングスっていう引数が渡されるとトッピングその一つのこともあれば複数の言葉トッピングするなんでそういう時にイニシャライズかっこトッピングかっことじるで定義すると思うけどその中でありかっこトッピング生かっこ閉じる. E .書けばトッピングが配列で渡ってきたら入れそのままループできるし入れじゃなくてトッピング一個のときもちゃんと入るとして扱えるしちゃんとロジックが簡単にかけて便利素晴らしい場所いいですね
transcript 0: 特によく使うのはウェールズがびゅうとかで例えば見るなのか下手すると2いるそうじゃない時にいちいちこれは何ですかとか聞くんじゃなくてあれで挟んじゃいまままいくとこのメソッドを使えば簡単に行くよ家の外ではたくさんお使いになられないとそうですねなるほどで使ってみてくださいお勧めですありがとうございます問題があって問題があって嘘やな滝の説明書通り実装は通常あるなら杖を呼んでなかったら海賊海賊じゃなかった角括弧で囲むっていう実装なんでそれがあるオブジェクトは体が動いちゃうで
transcript 0: 歌手の杖ってなんか思ってた動作と違うという花を聞いとバリューの配列の組み合わせの入れるならそれそうですねまず気が第一番目バレるが第二番目の戒律ができてそれが10組は7の日ですがあるというのになってこれ俺の星2人じゃないんですけども橋の上はこういうりそなってなってますね結果その結果ですねたとえばモック簡単な木を作りたいなと思って activerecord ってどっから抜きでも借り学校から無名でもアクセスできるチャンスかくさんってなんでアクティブジョブという簡単なロジックのテスト作ってる時に
transcript 0: 11先日のストラップとニューじゃないですけど1日クラス作るのは面倒くせえなーそうやこんな時のダックタイピングがあると同じ動作でしたらいいんやと思って発症で渡して欲しいん activerecord のオブジェクトの木を作ったつもりで橋を渡したのをしたら注意したらいやいやいやいやこんな風になるとは思ってなかったっていうことになって変なになっちゃったんだちなみに僕がそのためサンシャイン一覧を渡すか回答を渡すって送ったんだけどなんかなんじゃこりゃっていうことになったって思ったのと違うようになったってなんでその子だけが落とし穴でそれ以外は array to array を使わないと火を使っておいこれはあれですね話し聞いてるとあれから発症作るの普段やられてない
transcript 0: 仕事って実はなるほどねこれを提示したら母になるって事は2インチっていうか前と同じのハッシュから始まるメソッドのようなものがあって何て言ったらいいんだろうアッシュカード加工**であれが渡せるのであると私とねそうですね僕はこの世はさっきの16人また戻っちゃうんですけど一応1で回さないでマップで回すとこれが撮れるんですよそういえば確かにそういうのあれのあれが取れるのででそれをあの書き換え終わったやつもっかハッシュってやると新しい橋が作れるって言うのをちょこちょこ使うんですよね
transcript 0: 俺それ畳み込みって言うと思うけどとあるものとあるものに買い換えるって俺は普通にその後で出てくるリデュースとかそういうの使ってたと思うよ記憶できたとかそういうのは ZARD 使って行ってとかそれしかないと思ったなるほど声なるほどって言ってなるほどと思える人は多分にあるみたいで実験してみないとわかんないとは発信したらその罪をもとに2話することができることですよねそうですよねそのままできなかったことに何故かこれもフラットかけないとだめかもしれないですけどなるほどねアハハハがそんなことは割とよく行ってたのでほど前はそんな感じだなあって言ったらここではほんと喋んなきゃいけないのは今渡辺さんがチラッとしゃべった*引数
transcript 0: とかあの辺も分かってないとこの辺結構辛いですねそうですねあれ8引数リストと違いか今思えばこれだけ話したねぇ出てこなかったしてその速そうですねそんなことは Ruby の基礎知識であってなってたようなのかな結構難しいというかえるびーにはポイントがあったのとかなんかそんな気持ちになるってアドレスがあったのかポイントがあったのとかあの企業だけを見ればそういう気持ちになるんで結構難しいと思って欲しい欲しいですね使いたくなりますねまるびの勉強これは中級者以上年下の送信したか覚えてないかなこの本から言わせると言ってない暗黙的に言ってないそんな感じであればお勧めなんでこれ
transcript 0: カレーが確定してたらいい家で回せるのにてる時はありで運んでみてきっといいことがある俺が発祥だということになりますけど相次ぎ項目18要素が含まれているかどうかの処理を効率よく行うために集合を使うことを検討しましょうを読むを G + STD Set ですねベビーでもセット RB の場合ハッシュとかあるいは特に胃潰瘍しなきゃいなくても多くのセットに関しては離婚をしないといけないんでだめですよここにある接骨なんぞってと順序が存在しない include 計算の速いやりですとタコ順序が存在しないで計算の早い吾克直がユニークっていうことは抜けとるな値がユニークなはいはいどうしても順序が欲しかったら相鉄セットあります裏にも邪魔にもこんな感じ
transcript 0: 相鉄線とありますねまあそれを支える上でセットと歩いて見てるんですけどなんぞってと姉のインクルードは計算量が多の L だとあまり使ったら最悪10回文化カルトだけどちょっとのインクルードは中身上手い事持ってるんで生産量が66位のですがというのでめっちゃ早いよねこれがめっちゃ早いっていうのが何個ぐらいから聞いてくるんかっていうのはいまいちピンとこないけど誰だこれにしといた方が計算上は少ないだろうなっていうのはわりと身に覚えはないがこれじゃないと追いつかんやろって思ったことはまだないでここで出てくるのがさっきも言った通り先頭に挿入されるとはユニークな値しか持ちません普通のお礼は後に被っても OK だけどセットは
transcript 0: あぶちゃダメですよと会った時にその時に行くかどうかっていうチェックには先日絶命した aql はてな使われますよねでこれを正しく実装すればカスタムクラス自分で作ったらクラスの集合でも上手い事を後から作れますよというお話ですねえちょっとどうやってますかなんかは確実計算とかあのはいそうですね外部の EPA 叩かなくている日の中だけで閉じてて勝てるロジックがヘビーでみたいなとこなのかなーとしては戦争によってそうですね
transcript 0: 今日はなんか ID にして消えるはてなの実装を ID の実装ユニクロ開いて閉じそうにしてて後は突っ込んじゃったんですよねこの場合はこのバリューがない場合どうすんなっちゅーのあるかなんですけどねがない場合はケーブルアッシュのキーとバリューじゃなくてもキーだけの世界ので住む場合にはあのジェットを使いますけどまぁそれぞれ大体ハッシュで代用できますよねほとんどの場合ではキーと値キーと値下手すると聞いて値を同じの用意してやれば発出くれますかなまぁまぁまぁそうですねさっきも言ってたよリクワイヤーセットがめんどくさいあと大規模なシステムだってくると自分でセットを使ったら大分
transcript 0: これはデータベースにこれがユニークかどうかってはデータベースお仕事であってこれがやる仕事じゃないなとかまんまデータベース前提ならまあそうですねたがこれが生きてくるのはマジでその K さんの早解きそうしなきゃいけなくなった時でだろうなと思いつつも歌手でええやんっていう気持ちもあるんだセット使う奴だなっていう感じですかねなんかね動かあれですねスプレッドシートとか何したっけな俺けっとシートを自分でアレのアレで検索できるようにするみたいな仕組みはなぜかちょこちょこ書くんですよねそんなに頻繁ではないけど今日は cvssv を上から下に舐めるんじゃなくて立って一回呼んできて
transcript 0: で検索ロジック的なものが書けるようなメソッドちょこちょこっと用意しといててやるときになんかセットっぽい動きができるといいなとかあとは単純なセットじゃなくて何個含まれたか見たいなでも完全にこの本のサンプルはこの本乗ってるサンプルは CSV をパースして気づけユニークにしたいと日付ユニークにして日付で検索したら超早く結果が欲しいというのにそうする時にこうやってますねでも日付で行けるはてなを実装してうまいことやってると愛稀希によくある感じまれによくあるあるからなんだかんだ言って情報処理という言葉の通りなんだかんだ言って
transcript 0: 曲アリーナハッシュドセットだ二分木大倍率リーダーは何とか釣りだっていうのをそのシステムとかその対応速度に上がる形に上手いこと畳み込むてばっかりの仕事だなって感じはありませんばかりの仕事早いデータベースから引っ張ってきていいお客さんに見せるのにもう走って走って帰ろうとか見せ方がやろうとかっていうただそれだけの話なんて俺はすごく会いたいわけでないがそんな感じでセットお願いしますよろしくされましたですがありまた走りはなんと相次ぎ項目19 Reduce を使ってコレクションを畳み込む方法を見つけよう畳み込みとは何ですかと言うとねデータのリストをある程度集計したものなどのデータリストを作成することなんのこっちゃってますけど
transcript 0: まず勝手にリストがあったものをまた集計行の別のリストに書き換えることを温め込みといって間違いないかなと思えば何か刺繍とかあれが渡って来たらそれを待ち自分の都合のいい日とかありに考えるとある程度集計するとかあるしなおすとかていうのが畳み込みていうものなんですけれど例えば社員リストから21歳以上給料一千万以上の名簿を作りなさいと言ったら社員リストを SELECT Value SELECT One S 9のセットしなくていいの愛のメソッドのセレクトブログで年が21以上ブロックでかなり意外千万以上でその SELECT した結果をさらにアップして眠いすると ANAP デニムに書けるという事で
transcript 0: 21歳以上の配列を作って楽しそうになったら一千万以上の配列を作って桃名前を取り出して配列を作るというのがまあ書こうと思ったらかけるとぼーっとしてたらもう後が後から仕様が追加されたらどういう風に書くかなっていうことは大いにあると言うけどそれって21歳以上のためにループシーパラリーナ一千万以上でループしたらにマップを救うためにループしてるでしょねめっちゃループしちゃうんで Reduce を使い方見込み用のメソッドニュース&リリースを使って71ループで終わりますよという感じでただリリースメソッドヘルプを読んでもらうとわかるんすけどいまいちピンとこない使い方が特にブロック周りがブロックに返す値周りが返さなきゃいけないのっていう計算結果
transcript 0: 人んちに行かなきゃいけないんですけどそれがイマイチでしたんじゃネクスト地下戻しってブロックの戻しなんでブロックの戻りにそれを書かなきゃいけないのがいまいちピンとこないんですけどどういう風に書くといいよと明日にかけてのリリースの不使用なんで頑張ってやるんですけれどもまず前提として畳コーナー大隣今からこういう話題を作りますよっていう初期値は悪夢レーダーと呼びますよこれで寝ているすってインジェクトってゆうか嘘での別名でもあるとかインジェクトとか中果たしてそれが同じ意味を指すのかいまいちピンとこないんだけどてゆうとかすごいあるんですけどもそれについてはメソッド名の哲学を説明した Web ページがあるんでそれを言われるあっておりますってちょっとカッチリ読んで英語のニュアンスとかそんなこと結構みんな
transcript 0: 部活頑張って考えてるんだなっていうの凄く重いちなみに僕はロボコップカラマリ柳すよりはいい子水オブジェクト使ったらって言われたんで市美女木 JCT に変えることが多いですがやっぱりインジェクトの方がつまるところリリュースリリュースの方がいい場面もあるんだよっていうことがあるらしいんでまぁそれも外国の方の翻訳の言われるがあったんだよそれをとってお越しください説明しないのが慣れると難しいんでできないこれねやっぱり昔からボクもピンとこなかったっすよマップとかに&シンボルとかもだすジャンスカたいあれがピンときててもピンとこないすかねそうですね
transcript 0: シリウスの方がいいんやとかそこで考えないと書けないすねあと多分ね銀行知能とかそういうのを一生懸命やってて畳み込みの畳み込みの店舗を関数によっていろんな次元のものを色んなことやってるっていうのをやり慣れないといまいちピンとこないんだろうなとは思うんですけれどもまぁ W すると結構気持ちでちょっと買ってみてください使う時のコツとしてはそのアキュームレーターの初期値は必ず設定した方がいいですこれ書かないといけ群れている側だって突然そこで発信してみたりいろんなことしたことになるんで遅れたので私も一皿にブロックの最後には計算結果をちゃんと返しましょうだってそんなか適当に第2部で終わっちゃうとその数字がかえって飛び込み失敗するんでなんとブロックの最後にはキムレターを書いておきましょうとんだけど
transcript 0: これがいまいちわかんないからウィーチャットを使っていまいちわかんないっていうのが行動が意味不明になるというかなんかピンと来ないくなっちゃうんで結局12シリーズオブジェクトは煙レターは指定するんですけれどもブロックの戻り値は使わないバキュームれたわ断ってきたアキュームレータって言わないんだねもって言うんだったかなに丈夫な人の場合は引数がオブジェクトとメモって渡って来てメモに書き神田書き込んだ者が次なる国は回って来るさらにリターンはメモなんで笑ってきたと言い清水オブジェクトハッシュって行ってな空メモにどんどん箸が渡ってくるねどこに当たるようで計算した結果を書いたり火を消してまたよければうまいことを発し瓦解するというのがいつもそうだけどなんで僕はこっちの方がお勧めですはいどうですか
transcript 0: 頑張って書こうとするときもありますけどねやっぱなんか繊細だし途中経過がちょっと確認したいなーってなった時に入ってなったりするんすよねえそういうの計算量が少なく済む問題っていうのは逆に言うと一発で計算しないといけないんでいまいちピンとこないさそれがさっき言った SELECT SELECT SELECT SELECT SELECT してマップってやったらとれメソッドチェーン出かけるし一個づつ動いてる相手に退場アイコンを通り iMac したって気持ちになれるんですけどそうですねこれはもう動かんかったら動かんかったなんでやろうっていうことになっちゃって結構厳しめの計算量の多さとしためっちゃ減る可能性が大いにあるんであなんかデカいやつをやるときとかにはこれがいいかもしれないであんなとこでしょうかね
transcript 0: まとまっ繊細ですよねやっぱねレアかなんかそのこれをこういう風に返さないと駄目だよみたいなのがちょっと繊細な感じしません大江リリュース金を動かすだけでも割と苦労しちゃうからいまいちピンとこないけどだってことだと思ってそうな感じしますねお宿ちょっと変えたらブロックの中で if 文とか書いちゃうといきなり難しくなる例えばネクスト F なんとか=に入ると書いたらあやべ忘れたからしてませちゃったって結構あるねって書いちゃったからとか帰るんでもう計算家計管理とかそのブロックの書き方とか何かそれリデュースだからブロック簡単に終われねぇからちゃんとはデリケートだなっていうのはすごく意識しながら書かないとすぐ壊れたこんなんかなとは思いつつねなんかそこがあんまり交換的に
transcript 0: 何と何かこうでいいやろうって書いて動くルビーポスターからちょっと距離がある感じがしますねとかでうまく動いたらこれに差し替えれば計算速度がメッチャ上がってた P になるよっていうのは関西な感じでリリースですか鉄でいるとか使わないとよくも作ってそのハッシュにいい家で回して値を詰め込んでくるとかってコードになりがちなんですけどそれが欠ける是非一度お仕事とか明日は買ってきたこれ何だっけプールのたびに僕行っても俺はめんどくさいから使わなかったのかなーと思ったことがあるんですけど純粋に知らないだけな可能性あるなと思ってこれを使うといいですよっていうのは
transcript 0: METHOD List by 厚木重く28種のデフォルト値を利用することを検討しましょう明日のデフォルト値同士が使いますかごめんなさいハッシュのデフォルト値って設置をかけてではなくえとですね収入する時にパラメーター渡せるんですねいろんなパラメーターはいはいはいアッシュ. NEW する時に初期値を渡すんでかっこ0って書くとカッコでの格闘術と東西市内企業休止たら値は何て聞くと0は帰ってからもそんなのあったありましたかこれ使うと何が上手いことできるかっていうとさっきの例だと一部オブジェクトする時に
transcript 0: 初期値の橋渡しじゃない例えばキーとバリューでバリューは入れとったやつと針の集計結果なんであれば何月何日は値の配列ですと何月何日あたりの配列に値を代入しようと思ったら寝るなんで寝るの場合はあれ輸入して入社したアレを渡せますよってこと結構書けませんやりますねこれを書かずにあるとかそういうのが防げるって言う話はなるほどだからといってですよじゃあ8時の2をかっこ0って書いた場合は出るが分かってきて HAPPY HAPPY で誰でもデフォルト値は10だとするとアッシュの乳牛と格闘中何点は嬉しい嬉しいと思うんですけどこれがですね角括弧とかクラスのヌードがお渡しちゃうとそれがデフォルト値になってあってそれの参照をひきました
transcript 0: 明日の入港例えばハッシュのニュー角括弧開く角かっことじるかっことじるとどうなるかっていうと存在しない企業を渡した時に頭痛が似る帰ってくるところが最初に書いてありが帰ってくる時に私と兄が帰ってくるんだけど最初に渡した例が初期値になっちゃうへの参照がぐるぐる回ってくるね存在しないキー例えば X っていうの書いてアクセスするとアレが帰ってくるとなるほど存在しない日々書いてアクセスするとリスが帰ってくるんですけどこの配列は初期値に私と同じ配列を見てるものだから存在しない CX 3の中身を書き換えると存在しない聞いたらおかしいだろうか聞いたのがなぜか中身のあるアレが返ってくるっていう謎の現象が起こっちゃう
transcript 0: IHI それすら来ないっていうことで走るにはなんとブロック MOD で待ってていた収入ブロックとオブジェクトがなかったときにそのブロックの中身を返しますよって言うのかけるかななんかこれ使ったことあるな思いをしてきましたお待たせしましたがブロックの方を使ってるんだなんでブロックの方法を使うと割とさっきのが防げて飽きないですね来ないんだったらこのブロックを実行して返しますよってなるんでさっき言った余り減少が割と少なくともせると凍えそうですねなんかブロック使ってましたねさらにですねブロックはパラメーターに交番がある場合パラメータの引数が
transcript 0: 首都高鍋店のキスが聞いたつの引数があってそれはどういう時に呼ばれるかっていうと書き留めですけど中身がないときに歌手とキーが渡ってくる好きなように書いていいですか好きなように書いていてバグジーだ子供かけるって事なのでその結果どういう事が起こるかって言うとこういうの駆使した結果例えばアッシュにキーが存在するかどうかっていうのを書くときに手抜きするとハッシュかっこかぎかっこ閉じる.にるって聞いてんじゃねーぞこの県にあるトレ気軽にやると中身が増えるメソッド文字だかけるんだよっていう音したが中身は誰値が存在しなかった
transcript 0: クロックが実行出来るっていう形では欠けるんスカッシュの初期化方法として走るのニュースの人の行動中身次第によっては今入った.いるとかオブジェクトがあるかどうかを取ってみるね判定しようと思ってかぎかっこの中にキーを書いた時点でなんかのメソッドが動くのは確実ないっぱいなのでそっとが動いちゃうからもうちょいと言うべきか狙ってかわかんないですけどそういうことが書いてあるとなんかオブジェクトが増えちゃう可能性があるかなだから手抜きせずに葉月よちゃんと使いましょうねっていう話なののお行儀よく生えかけている曲が好きを使ってくださいねじゃあ葉月使うといけてるコードを書けるかというと大体書けないじゃん
transcript 0: 聞いてからやんのかよ面倒くさいやっちゃな時に初めて行った設置が出てくると話さたどり着いただけで撮っているって書くということがあるよって言ったら大丈夫なんだけどソレダメなことがあるから手抜きせずに葉月を使いましょうね取っているとかを見ているかどうかっていうのを見た後にか好きに置き換えたら葉月の場合は月がいるその場合ってそんなこと書かなきゃいけないのってたのとクソカッコ悪いから小豆の代わりにレンジを使うと key が存在しなかったらしいですなかいられるのに素が無かったらキスを与えなかったら例外が投げたとかべっちはどうしては葉月の例外番ですね奇数がいい子だと真ん中がないと家のキス2号
transcript 0: を使いましょうとすれば気があった場合とお金がなかった場合の音思いっきり省略して低価格なかけますかというのがいいですか麻生さん外しありとちまちま書いてますねっていうの塔跡フェチでわざと殺したりもしますではもうないと動かねーよって来たそうですねなんかコマンドラインでちょっとしたツール書くときに環境変数来れないと動かんよっていうのをわざと例外投げて死ぬようにしたりみたいなのはやってますねそれでも項目20読めば読むほどじゃあハッシュのデフォルト値で開く
transcript 0: 利用したらいかんのやってた時にはリデュースと海釣図オブジェクト以外の時で使わないのがハッピーやろなぁって気持ちになりましたはいはいあってねこの虹の確認の仕方しないでくれるこれするとオブジェクトが増えちゃうんだよねって言われたらどっちを説教しますね自分を使って確認する方は気をつけろよと連絡を作ってんじゃねーよっていう気持ちがありませんがめったに見ないからなぁそっちのコードは何か他のライブラリのコードとか見てますよ見ないっすね今見ますねまたその時の愛それだけでさっきの右ですとか市立オブジェクトと組み合わせるときには発信の電話は立ち上がりませんことを検討しましょうということです
transcript 0: 考えたタイムリリースの行動がかっこよくなるんですが項目21 Collection クラスからの継承よりも異常を使うようにしましょうだいさくしょんクラスって何とか8とかそれとカセットです今説明した妻からの継承よりもを使いましょうとオブジェクト指向の傷跡はずだの議論も買いましたね俺はこれ自身がそれなのかとその機能を持っているのかどうなんだけどなんですけれどもここは議論は可愛いと言っても大体先の社員の話なんですけど LINE の配列だからアレをエクステンドしてエンプロイーリストを作るのがマイクラで正しいんじゃないかという気持ちになることが多いとんだけどそれすると
transcript 0: 元クラスではありませんでしたら幾千怒って言ったかなあれ継承したら橋を消せる HASH set set のためのメソッド全部受け継ぎますよね思った通りに動かない都合が悪いものについては全部実装しなさい寝てないっていう欠点がありますよえ今言った通り社員リストを作ってやれよ計上するとバレーに入ってる味噌ってめちゃくちゃあるんで割と大変なことなんだこれは楽しようと思って化粧したのに全然楽じゃないってことが大いにあるんで本末転倒になっちゃったそういう時は割と大西あるんでこれはコレクションを計上するんじゃなくてタイリストっていうクラスがあって内部的に社員のリストを持つという風にしてないはずの業者にして床に対して
transcript 0: メソッドをリダイレクトするということをやりましょうそれそれには4 W モジュールをエクステンドしているセルだけにデフ delegate かける羽毛 F delegate って書いてこのオブジェクトに対してこのメソッドを移譲しますよっていうのは誰と並べて書くとうまく以上できますよというのが方はダブルの良いところですだから4は w を使ってアレンジを継承してなんかするんじゃなくてあれを持つオブジェクトを作って別に対してくる膜法はダブルで以上していくようにすると確実になったためここでエクステンドっていうのが初めて出てくるもうなんでかと言うと4 w はエクステンドしてくださいというのはこの本に書いてある羽毛エクステンド時計傷何が違うんですかもうさっき僕が景勝のことを一時エクステンドって言ってたしては java とか PSP って xtend とか体育
transcript 0: それそうですね俺を継承しますってあれはけいしょうは軽症なんですけどルビーではエクステンドは爆釣って意味なのかわかんない意味が違っててルビーは何かお役ラスになんか入るとか include と違ってそういう動作はなくて単に対象クラスのインスタンスメソッドが自分にそのも移植されますよというのがかかったそれではダブルを継承すんだよお金を得るエクステンドしてもらってデフレにゲットして書きましょうエラーコードを書いてコレクション何でよくフリーズとかなんとかペイント汚れるペイント反転とは以上先とか以上先の転換点とフリーズを読んでさらに自分のスーパーを呼びなさい
transcript 0: をすることでうまくできますよというのが取れそうにも使っちゃうんだけどもどうですかなかなか使わない系ですけど何で勝ってるバカになってるから使わないのでも独自ライブラリとかやってるとすぐ声作りたくなるよねなんかのオブジェクトのリストを表現するものってから大体やるといいんだけどまぁいつもありエクステンドして作って酷い目に遭うんでオーバーダブルっても重量この本でした時は結構簡単だって見かけたところで第3章終わりですありがとうございますございます1時間ジャスト1時間ぐらいすいませんあの最初の最初のあれがみたい的には結局 array Collection かコレクション周りで今入った対処
transcript 0: 議論の値渡し参照渡してないけどそれが分かってないといいニュースもそうだして剃るどっちもそうだしなんでこういうことになるんだろうってのがわかんないことが多いんでまだそこの理解からっていうのはすごいあるとそれを理解した上でさらにこの書を読むとなるほどなーということが分かっ結構特に日本は W 形は本当他の言語でも欲しいわあーそうですねメソッドプロキシみたいなやつが書いてるからねこれ楽ですね今日は本当に来週は例外ですお願いレスキューレスキューエンジンはどんなところですかねでも本当にコレクションとかアッシュとかって activerecord とか使ってるぶんには
transcript 0: 生の声を使うっていうのはまあせいぜい param とかパラメーターぐらいその後パラメーターかあの辺ぐらいですかねそれもそれすらもレールずに乗っかってやるとあまり意識しなくて使えるんでなかなか自分で集計するとか自分で畳み込むとかでないとでも俺をやるときにはこういうのがっちり選んで行った方が楽しくやっていけるやろなあと会いたい長々とすいませんでしたもうこんなとこですかねはいはいじゃあ今日はこのところで次はだよそれ以外何で次も聞いて下さいありがとうございましたありがとうございました
