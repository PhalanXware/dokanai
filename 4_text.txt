transcript 0: 第4回積んどかないラジオ始めますよろしくお願いしますお願いします前回の反省反省好きですねあーそうかその前に本番が見せつけとかその他モロモロが出てましたね反省好きすぎて反省した後のしまったちょっと待ってねこんな Podcast は何時積読で本を読んでその内容をゲストに説明するという Podcast です今回ゲストは渡辺さんですなんですが簡単な自己紹介は第1回を参照して下さいと出ますがどうかよろしくお願いしますはい今度前回の反省会本のタイトルは言ったんですけど渡辺さんの紹介が抜けたっていう音止めてくんない側も気づいてないっていうのがひどかった問題がひどかったもんだよね多分
transcript 0: 低周波は割と消すことを学んだんですけど何ていうノイズがどうしても消えなくて今も聞こえる気がするこっちかなんなのかなそれがちょっと難しかったんですけど前はそれがひどすぎて何書けそうにも消さなくてバリバリって会った所があってちょっと変だったっていう話ですねマイクちっちゃい都道口の中のニチャニチャ音とか聞こえちゃうんすよねあと数とかハートかよ息を吸う音とかまぁまぁそれしょうがないんでしょうけどなんとかねカット収録収録データを作っていきたいと思いますが僕の方はまあまあ良かったんですがやっぱ USB マイクよりもあなんかなんて言うんだっつーの4のやつのがいいのかなとか色々思っちゃいますね午後の方がねあんまりそのいろんな道具試してみたことがないので
transcript 0: スカイプ場で花火してるぶんにはすっごい十分なんでこんなもんなんでしょうね十分な感じがしますよね前回ねすね準備不足で短くなるかもしれませんって言っていましたって言ったのに1時間頃寝ちゃってやっぱね無音の部分をねもっと消さないと45分ではなんない気がするなんかあの話削ってもらっていいですよそういうところが面白いんじゃないという気持ちもあるんすけどねもうこのペースだとやっぱり1年かかるんでちょっとやばいなあと思ったんでも序盤2回目の時にも言いましたけど序盤個ほど言いたいことがいっぱいある感じはしますけどね今回もめっちゃ高いと思いますよそうですか野菜が早く終わるといいんですけどねまた毎週日曜の夜やるのかよたそ
transcript 0: もっとガッツリ3時間かけて収録して分割して焦がしたほうが楽ですかねどっちが楽ですか本当は2時間とか2時間なまあそうですねかけた方がいいんだとは思いますけど他に何か分かんないってのもあるんで時間がそのや計算通りに2時間に行ったら情報量が倍になって日本文になるかがわからないんですよねと聞いて片方は40分又は10分でコンテンツを作る可能性がゼロではないですかね今だともうなんかいっぱい喋ったねじゃあおしまいってありますけどね確か慣れてるとに日本とかサーモンとかやれるのかもしんないですけどお時間取れた辛くですかそうですね実はまあまあ
transcript 0: 辛い辛いってほどではないけど僕の方はね9月文とるかなー俺もなー頑張らないと終わらないからなそうですねまずあのゴールしたいっすねこの前の話ですねスケールアンチパターンとエンタープライズアプリケーションアーキテクチャパターンの柄あるパターンについてやらんといかなくなったから音鳴った音鳴ったんだからもどんどんね読まなきゃいけないものだったのかなやりましょうやりましょう元ネタベースに詳しい人とか言ったらそちらでいた行っていただいてもいいですよ確かになんで皆さんとこのデブオプスのような彼らでさえまだ温度差を感じることない感あるなそういうわけでさっそく本編の音にしたいと思いますがその前にまた大きい犯罪こと教えてました笑と会話になり
transcript 0: 編集しましたすいません違いますね渡辺さん僕が言ったことに対して渡辺さんのツッコミがあってね俺がそういうことでみたいこと言うんですけど全然そういうことじゃねえよって言うことが多いんですよそんなそんな気にならなかったですけどね僕は最初の反省でサンパークに行きたいこと言えないっていうのと同じで桜そういうことじゃないんだよって編集しながら思いながら行ってますがなかなかいろんな意味で辛い作業ですね本当に恥ずかしいとことが多いママしょうがないこれが実力だからね少しずつ上げていくしかないしね会いたいよこの本編行きましょうはい項目中に様々な形の違いを理解しようこのポーチは公直と書いて統治される日っていうのは値が
transcript 0: 同じかどうかを確認する方法と四つあってくるはてなっていうメソッドが M . E . E qual はてなそれとよく使われる==さらにはここまで二つは割とよく効くんですけど効く違うのはよく見るんですけど結構あんま見ないなっていうのは etl はてなっていうメソッドもあるとはイコールじゃなくていい消えるはずなのに加えて===ということもあるとかでこの四つがあってこれをちゃんと分かってないとハマりますよというのがこの項目12まで大差ない= equals 宛名から説明するところ品曰く俺もメソッドも柄が良くないと思うと aqual はてなは何しとるか
transcript 0: 同じオブジェクトどうかをチェックしてるとルビー理由と同じオブジェクト ID を持っているかをチェックする制限が僕と同じメモリの上の指すポインタかどうか見てるというのがこの E qual はてなこれはもうお祓いをしない方がいいよとこのメソッドは同じオブジェクトかどうかをチェックするメソッドって何かお米でしていいことあるかで得意なのでやめときましょうというのがこの本でお勧めで次郡=なんですけども実はオブジェクト==のデフォルト実装っていうのは会って説明したい qual はてなていうメソッドと同じ実装になっててあまり役に立たないことないかって言うとこの==で何をしたいかというとたとえば文字列と文字列を比較するとか数値と小数点付きで
transcript 0: 今日の数値を比較するとかそういうことに使われる同じ大きさだとか同じ文字列だっていうことの近くに来ない==で使うんですけれども今日はもうそのフィックスナムとかストリングとか float が上手いこと地質をしてるんであってデフォルトの実装をつまるところオブジェクトですね僕ジェクトのデフォルトの実装は役に立たないんだけど俺は首の枕が普通のライブラリを使ってる限りはうまく動くように実装されてるって言うのがここではニコニコの説明ですね日本人==くらいで生きていけるんですか思いますけどねまあのオブジェクトとカレーとかの顎を取れたみたいで本当に良い具合にできるって言うのははない不都合のいいこと考えてるよねっていうんだして==
transcript 0: 中身はコンペして全部同じだったのは何時で帰ってくるとねことを期待馬 PHP はなんとなくそれっぽい動きをするように見えますけどねルビーぐらいのなんかあこれ実は同じじゃないなーみたいなの教えてくれるぐらいのレベルだとむしろ方が安心な感じはしてますとかねでもスクリプトもそうじゃなくてそんなことないかな歯だよねちょっと行ってもいいです頑張って支度しているのでもスクリプトはなんかさらに数値と文字といい具合に頑張ってるのね THP と同じで怪しい感じに同窓会ですねでさらに同じかどうか比較するなど残り二つずつ説明に入りますけど eql はてな何かっていうとオブジェクトハッシュの
transcript 0: いる時に頭のいい子ですねキーとバリューのキーの方で例えば HASH . New て行ってそこに自分で作ったクラスのインスタンスを気にすると足の場合はキーがユニークなんでユニークかどうかっていうのをチェックするためにこれを使われますかとありますかわかりますかねあまり相談意識はしてないっすねそれはですね8オブジェクトのキーとバリューでキーの方というかクラスからクラス会が作るとのクラスは名前 name って持っててもこのカラークラスのインスタンスをキーにしたいと例えばピンクといえばある耳鼻にいくつですよとかレッドといえば RGB のいくというような橋を作る
transcript 0: いう時に気にカラークラスを使いたいとかクラスのインスタンスを使いたいと文字列とか数値じゃなくててスゲーな感じはこれがそれがいい子そうだととても思えないけどサンプルではそうなってますねカラーに名前をつけてその例えばネームピンクっていう映画を作ると名前という内部変数があってそれを近くってそれをユニークにしたいと荒野名前ピンクカラーの名前ブラックカラー名前レッドっていう風にやるんだけど例えばカラーの名前ピンクのところにさらにカラーの名前ピンクって言った時に4個のオブジェクトあるよっていうのを実装するためにはこの1087っていうのをオーバーライドして実装してあげればあーそういうことができるというのが臭い消える
transcript 0: これがいるいるんだよなたしかにちょっとこの後の説明で e テレは何でいるかっていうのは誰がねちょっと寝てくるんでまあ今回は行けると良いのですが最後が===これはケース等値演算子である誰の背ケース当地菓子ケースなし se 土地は同じ値同じでこれは自分で===て書くことはなくて Case 文から書くことがほとんどですよという風になっててこれもうまく動くようにうまく実装されてないオブジェクトによって動作が違うとなりうまく実装されているので左と右をちゃんと注意して書かないと
transcript 0: == B が B = A ってのはレシーバーが A か B か逆ナンで判定ロジックが違うので注意してくださいねとで変わった話としてクラスメソッドに===と書いてあるのでました覚えてなかったすねもね僕としては何使ったのかいまいちピンと来ないですけどいざと同じ倒産すると例えばなんかさっき言ったから来らっせに祟らカラーなクラスメイトカラーコール==アナとかいたらこれは何のお父さんをしますよということらしいですこれがどう役に立ってくるのか分かんないってのはどうしたら===が好きなんですかなんでしょうねあのやっぱりうまく動くように言って言う
transcript 0: あえてこれを言いたいっていうのもあって僕はの PHP とか JavaScript で=二つはだめだから三つ掛けていうのがあるじゃないですかあれが嫌いなんですよ何言ってんだと言語言語の皮が程度いて人間に共通するんじゃねーよっていう気持ちがすごくあってそれは比較したいってだけなのにこういう場合の比較だから=を三つ加工だとか二重にしとこうかなじゃあかんやんかそれがそもそもおかしいんじゃないってね普段=三つはもちろん書かなくてなんだけどいい具合になるっていうのがそのケース分解てる時すんごい気持ちいいんですよねさっき言ってたその=二つの方も何か=二つの方を無駄に高機能
transcript 0: にしてなんか挙動が不安定というか直感的に理解し難い動きになるぐらいならそうなってない方がむしろいいなっていう合理コロコロ相当うまくできてますよねですねその辺の塩梅が本当に上手って思っててとこですねだから=一の挙動だけがめちゃくちゃ大好きかっていうとそうじゃなくて全体で割とここは本当にあの書きやすくてよ考えてバランスを取ったらそういう演算子オーバーロードって決まったら勉強中ですか決まったら運極ったらっていう表現が荒れない奴ですねシンプルとか例えばベクトルをかけますとかよくあるのがこれがホントいいなと思ってますがまだこれがない言語があるじゃないですか電話とかはもう揃ったりしてたんですね確かわけわかんない
transcript 0: 直感的なのはそっちだろうと思うけどその結果としてプログラミングが下すというから謎の動作をすること左辺と右辺がやっぱ交換法則を満たさないっていうのがホントそうでメソッドねただの掛け算とかただの引き算演算子なのになると実に書く順番によって動作が納得できないほど違うって言うのはまだ辛くて辞めたんだろうなと気持ちは分からなくもないのみの場合はバランスとっていろんな=メソッドを定義してるから前かお祓いをしないと悲しいですねそうですねそこもだからあの一貫してていいなあと思いますお米そっとじゃんって言う演算子って言ってぇ以上で言った方が通りが良いから言うけどほら変ですね
transcript 0: 古木場さん災難続きの5年は比較演算子代入演算子喧嘩なびでは小なりイコール大なり演算子はいわかりますはいこの本では宇宙船演算子俺が宇宙船の形に見えるらしいですよ4の形にそんないい方だったかなあったかもなったんでしょうね消しちゃってかじゃなくてちゃんとその小なりイコール大なり宇宙船に見えるこの演算子とコンペ荒ぶる猛獣で比較を実装しようという7項目13ちなみに小なりイコール大なりのこの宇宙船演算子は左と右が比較できんかったら20 SD 歯の方が小さい時はまず自分自身の大きい時は市等しい時は0を返しますという約束でまたキスをすると思いますよ
transcript 0: さらにその後コンペ荒ぶるをモジュールをインクルードするだけでもほとんどの比較演算子はうまいこと値を返すような事ができますよという話ね W モジュールには小なり小なりイコールイコールイコール大なり大なりイコールが偽装されてるのでたぶんなくて気には宇宙船演算子を選んでその結果を見てまたよ会社ですよねきっとするとか殺すぞなんで宇宙船演算子の他に何も出さなきゃいけない==も実際かなりマジで来ないんじゃなくてポンペイ荒ぶるを行くとするだけでも OK という事ですねこのサンプルだとバージョン情報だけですか会メジャーバージョンマイナーバージョン一番下何でしたっけとかパッチバージョンは
transcript 0: 鳥瓜なんとか数字とかなといったものを上手く例えばバージョン古い順に並べてくださいとか私に舐めてこれとこれはどっちが正しいでしょうとかそういうことをカッコよくうまくやるにはこういう自分のクラスに宇宙船演算子を作って髪. JS プリッとしてまず一番トップの数字をヒントに変えて比較して次は二番目の比較して出会って企画不能ならにいる小さい時は-14の時は1時という時は0で返すって行ってくるとコンペ荒ぶるとやるだけでバージョン情報を扱うクラスを簡単につくれますよっていうのが重く13でこうしたらいいんじゃないのって書いてあることなんですけどお得する場合この塚地図を実装しなくてもすみません
transcript 0: そうですねあのハイ状態が三つも四つもあるのを作るのが頭がついていかないですねのでだいたいこの順序で欲しいなって時はね相当のブロック2年目所得はしたりなんだかんだしちゃいますかねその方が結局読みやすかったりはしますね少なくとも宇宙船演算子をちゃんと提示してるの見たらこいつ effective Ruby 読んだなって思いますよねきっと誰かに触ったんだけどコレデビューで俺いらないんじゃないってやったこともある気がしますね本当にその帰ってくる数字の何が正しいかが覚えてられなくての-1が返ってくる条件ってこれで合ってんだっけみたいなのが複雑だとそうなんですよ
transcript 0: あーなるほどねたとえばさっきのバージョン情報だと多分. net split して一番上の桁を2倍して X の X の X の X の宇宙船演算子に退場しますのでまずはそいつがゼロ帰ってきた時にまた子供見に行けばいいんですどうすれば頭から順番に逆できるしねというようなコレクションを作るときがあるか問題だけどなんか簡単なやつだったら外で巣を取って解除しもっと複雑になると SQL のソートのオーダーバイトって欲しいイマイチ活躍するところがある日ノジェムとかねこの前言ったストラップとニューとかしたらストラクトニューでこういうの作った方が良いことがあるのかなって気持ちになりますねとは思うんです
transcript 0: でも宇宙船演算子の存在とコンパイラブルモジュールのこの二つ揃えればもう前比較演算子かけるよっていうのはしてないと恥ずかしい漢字ママママ行ってきますけど書いてあったの見たらそういうことやりたいんだそうですね宇宙船演算子は実装されている話題だりーわ演算子は自称してるは長打率は常にさせる終わってなった時に例えばですよ大なり小なりは書いてあるけど大体リコールが小なりイコールは書いてなかったらこれは知識が足りてないのかいや加藤さん渡辺さんこれはそういう実装なんですって言ったらいかんです4ねそうなんだか分かんないですから常識としてこない女子とかないといけないからやるんならそこまでやりましょうってこと
transcript 0: おすすめと医学部 X 線ダンスコンペラベル文字の肉を割いてたらうまいことやこのクラスはオリジナルの比較方法を検討してんだなって気持ちになる何だってこのコード読みましょうってのがそうですねバイだ項目13杯ぐらいでいい事を信じますか今日は40分ぐらいでしょ白くなるんですか今日は順調な感じします by 項目14 protected メソッドを使ってプライベートな状態を共有しようとなって OB の主要な競技にカプセル化がありますとライブ実装は文字通り内部に止めようという考え方ですとあるねパブリックのインターフェイスとプライベートは内部実装っていうのが OP のクラスですというのが世間一般的な常識を前提としてどういう間子って絶対プライベート Pro て
transcript 0: パブリックっていう言葉が間違えてくれてくるんですけれどもロビーのプライベートっていうのは他の OP オブジェクト指向言語とは車が違いますよとルビーのプライベートって何かっていうと明示的なレシーバーを指定してメソッドを呼び出すことができないという振る舞いであると定義されていても集まるということがあっていうとなんかプライベートメソッド呼ぶ時にぺけぺけぺけぺけぺけぺけですね OBJECT . Private メソッドはいけないとなんとか. Private METHOD っていうと月のやつは読めませんよとかねこの前セルフの話だと思うけれどもそんな風に省略したメソッドを直接ペンで書くようなスタイルでしか呼び出すことはできませんよっていうのがある日のプライベートなんかね俺最初説明読んだときさっぱり分かんなかったんですけど
transcript 0: 僕もわかんなかったっすねただこれに似た経験しててリぷらの最初にプラで例えばコンストラクタにコピーコンサートってあるんですよコピーコンサート何かっていうと文字通り変数 X を作るときに変やなまあまあ一旦着くって言っていいかを作るときにその元となる Y からコピーして作るっていうのがコピーコンストラクタなんですけれどもトレイの時にクラスの定義で内部変数はでプライベートとか苦情ですかでもコンストラクターの中で渡ってきたオブジェクトのプライベートメソッドが呼べるんですってなんでと思ったんですけどそれはそうでどんな Private protected っていうのは何スコープっていうお花のあとに実行スコープじゃなくて普通に
transcript 0: スコープなんで今俺クラス A の中だから自分自身のプライベートメソッドレシーバーがあろうがなかろうが呼べるん家はついて読めるって言うのはいくらのプライベートメソッドでも自分自身がフレンドのように呼べるって言うのはそういうことやったんやプライベートっていうのはそういう解釈コンパイラが解釈するんだなぁと気付くのに結構時間かかったですよなんでみんな俺ってあとは結果林さんですよプライベート内部的に内部変数を持って受け取っ受け取るメソッドとか得するメソッドっていうのはせっかく隠蔽してるのにわざわざ書いてこんな記事書いてアホらしいなと思ってたことが一時期ありましたなんでこのルビーのプライベートっていうのはそういう解釈という書き方をしてるんだっていうのはなんとなく明日でお前たちが求めているプライベートなお空
transcript 0: プロテクテッド金を使いなさいというのはこの方に書いてある重く順タイトル通りの事ですねなレシーバー付きでメソッドを呼び出せますよ都道県というのはレシーバー付きでメソッドを呼び出そうとしている箇所例えばクラスへのオブジェクトメソッドの中だったらそのオブジェクト同じスーパークラスを持ってたら行けるという縛りなんでちゃんと検証関係のある者同士なら動的メソッドレベルんでみんな他の OP 言語がやってきてプライベートだとかプロテクトなって書いたのは指ではプロテクト出かけようというのがここでどうですか立って海の子のプライベートプロテクトまパブリックもありますけど書き方
transcript 0: が特徴的だなぁと一つを持ってるところがあるんですけどこれってあんまり触れられてないんですかねとかね何かこれもメソッド宣言何だっけあの子このメソッドに書かなくていいですよね蔵と同じスタイルですよねそういう事なんだからベルと言うかここ以降はプロテクトですよねちょっとびっくりしたんですけど僕はそっちから来たんでジャパネット家臣シャープになってを保護全部つけるんだから放って思ったけど変わりますそこはなんかへーと思ったところだね確かにタイプする文字数は減るとは思うんですけど関数があっちゃこっちゃしちゃうなあって感じるんですよね何なんだろうかっくん場所を整理しやすいとかはあるのかなぁみたいな
transcript 0: 何だっけルビーのコーディング規約で関数名をソートして置いとけって事だったんで確か昔だこれプライベートプロテクテッドとかどうすんだろうなと思ってたことは覚えてますそのそれぞれお腹出そうとしてかくってことがめんどくせえと思った記憶がありますねだから特徴的かって言われたら僕は C + C に何でもないってきます何回 SP とかもこう書きますね明日ねもう一つというのとも子はこれに関して言うとはい完全に過激派なので過激な酸ヶ湯とねプライベートとかプロテクティッドとかいらねーじゃんって男らしいですねていうタイプですかね嬉しかったことがないですよねマジで
transcript 0: あの多分そのソロプレイが多いってのあるのかもしれないけどもう一個はどのや北にプライベートとかプロテクテッドとかつけちゃったおかげでお前のこのライブラリの出来の悪い奴を俺がどうにもならんやないかみたいな思いをすることがちょこちょこあってその気持ちはわからんでもないけどそれが約束だからなっていうインターフェースの方から来た人間はそういう気持ちになりますねではで結局これこれどうしたらいいのってなって何か見たいなに別の何かをコピーして実装するとかすごいアホなことやってるなと思ったりするのでいやいらんやんこんなん坊強させなさいという気持ちの方が例えば純粋仮想関数じゃねーしまあまあ
transcript 0: 仮想クラスタ仮想クラスであった純粋仮想関数純粋仮想クラスなってんかなまぁつまりインターフェースですね今も食べインターフェースってキーワードがあっていいんですかなと思うけどもう遅いですよねそのインターフェイスを使えるか public protected で隠蔽してるかで腕前の差が出るなっていう気持ちがまず一つとして待っててインターフェイスはもうほぼ表が絶対パブリックなんでそれ以外で隠蔽しようとしてるとこいつイマイチだなもうちょっと頑張って勉強したほうがいいなっていう気持ちになるのともう一つはそれはその型前提な気持ちだなっていうのは気持ちはいますではもう最初に約束してこのインターフェイスでやろうねって約束してそれをそれでリストをするっていう風にやるのが形のいいとこっとがいいとこないですかもうこれだからね決めてやるって言うのもなんだかなんで僕が最初ルビー
transcript 0: のソースコード読んだ時にベッドのメソッドを呼んでほしいかはさっぱりわからんていうのはすぐ思ったんですよねでも一個は続きがあってそれはなんかのあるドックとか宿とか誰でもかけなくはないですね証明することはできる機能としては全部パブリックだけどドキュメントには現れませんっていうメソッドは作れるのでなるほどねなんかそれぐらいでいいんじゃないのっていうイベントに現れるのはパブリックで考えなくても注意して使えないのか本当に僕は痩せるのがいいとこだってずっと本当に思ってるので何だこれって思うことは本当にいますね結局そういう意味ではもう片方をドキュメントだと思って生きてるわけですよ
transcript 0: みるとこのこういうこのクラスライブラリを使うんですかあこのインターフェイスを使ってくださいっていうものは出されて歯がなるほど分かりましたって言うとスーパーとかだったら一緒のヘッダファイル一個なんすよ実装も書いてない本当に関する知らない奴って関数と方一覧かだからもうそれ分かりやすかったんですけど俺は純粋オブジェクト指向言語だみたいなこと言ってんのに俺の知ってるオブジェクト指向言語と違いすぎてお前お前のライブラリのどこをどう助けたらわからないけどって気持ちにすごいなってましたねそれをドキュメントでカバーする世界なんかなーと思ってましたし最近自分のページ見るとお前が何をやりたいかヘルプを見るぐらいだったら SPEC を嫁って書いた絵で書いてあるかなんでそういう世界になるほどなーと思ってさ
transcript 0: だってますそうですね何をどう使ったらいいかわかりやすいかわかりにくいかっていうのはあるとは思いますね今嬉しいかってやると出て嬉しくないですよねプロテクテッドとかパブリックとか使い分けて長い子だったかっていうと特にないただ例えばそれは作りが悪いよって言うのは最初の北乃きいプラノと Java のインターフェイス話と同じになるんですけどどの程度と書いてあるとなんかこのメソッドは別のコントローラーとか理由とかというレイヤーじゃないなセクションに分けてる MVC モデルとかだととかでもあこいつはこいつの中だけで完結してて他の所に影響を与えないからここは好き勝手自分で書いてもプライベートの中身だけは好き勝手書いてもいいんやって
transcript 0: 気持ちでコードを読む力をどうから省略して読んでるって言う所は間違いなくありますのコントローラーの set param ぐらいですかありますだから普段はもう最近はそんなに困るなぁみたいなのないですけどねなんで合わないと困るところっていうのはおっしゃる通り何かもしれないですねトライベートとか何か9曲めずに鮮度で叩けるなみたいなのもなくはないんですけどそれを書いてなかったかな赤いなにかやろうと思ったらできるけどそれはもうあの別の話だからってもめっちゃ書いてありましたが気持ちは分かるけど別に困ん金そのテスト書く時とかも別に出て嬉しくないし
transcript 0: 沢田先生も言ってるじゃないですかパブリックメソッドだけはテストせよとそういやなんだけどつまりプロテクテッド増やせば増やすお手数をかけますが減るんすよいやいやいやお金なんかプルンってコーナンプロとソーナンスはプロテクテッドに死体メソットってだいたい何点ですか鶴川的メソッドというか例えば面積を出す渡ってきた引数を2乗して返すだけの変なメソッド作ってするわけじゃないですかでも面積を出すというロジックが正しいかどうかテストするときはそのテニスその関数だけはテストしたんですよねだけどそれをテキストになってるから呼び出せねふざけんなパブリックするはなっちゃうこの3年間だから全然嬉しくないですよねなんか気持ちはわからんではないけれども別にやらなくていいんじゃないっていう過激派です
transcript 0: がおっしゃる通りで僕から言わせればプロテクテッドとかはもう全然入んページはいつだったよ思いつきでプロテクテッド切り取って下に2行ずらして貼り付けしたらその上の2行はパブリックについてなりますかねなんで気休めかなっていう気持ちはあるけどちょっとそういう気持ちになりたい OP のプロテクトプライベートってなこうなんだぜっていう気持ちになりたい時には声を使うプロテクテッドを使いましょうというそうですね他の日で習ってた人はっていうことですねはいはいああそうして15で第2章終わりです最後の65クラス変数よりもクラスインスタンス変数を使うようにしましょうというのはこれはもあの第2回を思いだ2回だけ延々用語説明をしてたやつがあったと思うけどそれを水面に出さなきゃいけないですよはいまだ説明するとクラス変数とは
transcript 0: 顧客クラスの所にあって@ WT マークから始まる変数を作ることができると宣言してそれを宣言するとはクラスごとに保ちますよ産まれ+ x1の作って AT AT name = Value って書いたらどのクラスは後々ネームは針を手荷物プラスが持つとエイトプラスから作ったオブジェクトが持つでクラスが持つで@がインスタンス変数ですよと例えばメールのモデルとかやったら@んなんとかって書くと変するとしてめまいすることがないんだけどオブジェクト指向オブジェクト変数として持つことインスタンス変数か今言うてますので変数として持つことができますかと今のところクラ
transcript 0: 2 watt わっとインスタンス変数アットですよというところがまず1階の1としてあったとバリアブルクラス変数アットラブ AT バリアブルは何と継承されてしまう何で暮らす X の中で AT AT 眠っている変数を使いどの X を継承して Y を作ると Y の AT AT ネームっていうのは実は x- AT AT ゲームと中身が同じなんで困るととまると言うかけいしょうに23回したらなんか知らんけどみんなで共有のもの使って使いもんにならんのやけどどういうことになるのが目に見えるって言うのがここで駐車券やってなんでバリアブルを使いましょうとインスタンス変数いやいやインスタンス変数じゃ困るんだけどクラスごとに点数を持ちたいんだよっていう気持ちになる
transcript 0: これは例えば普通のインスタンスメソッド化インスタンスメソッドを生やそうと思ったら出るメソッドで書いて中にあったバリアブル=なんとかって書くとインスタンス変数に値を代入できない複数のオブジェクトのインスタンス変数に代入できるんですけれどもクラスメソッドクラスメソッドまたはどうやっていますだいたいあのエルフを開くやつとセリフとメソッドって書くと糞だクラスにメソッド生やす事あるよ北 JCT インスタンスメソッド入るんじゃなくてクラスにメソッド早すぎるとどうかごめんなさいね伝わってなかったなクラスを何となりに重ねてセルフを開くここからセルフですよというかのパターンですねそうですね
transcript 0: 勝手とそっちの方を好んで買いませんかと音のブロックにかけるとかここからここまではそれですっかり春ですねそうですねどんな感じです今日はそのクラスメソッド指定クラスメソッド中野 AT バリアブルを使いましょうそうするとクラスのインスタンスのアットマークが使われるんでオブジェクトの@なくてクラスのインスタンスのアットマークが使われるんでちゃんと使えますよとプラスのながら継承されることもないしそれぞれてきますか大丈夫ですかわかりにくいっすよねわかりにくいんですよちなみに僕これロボコップ2月言われました明日0時接続状態を常に持って行こうと思ったんですよ1回接続したらそれをキャッシュで持ってようとソレイユに行くに持ちたいんで誰でもレジディスコネクト
transcript 0: っていう名前のクラスを用意して AT AT レディースコネクター=接続ってやつなんですけどいやいや回った後は良くないから@を使ってる夫に言われてイヤイヤイヤイヤ@くって書いたらそれはオブジェクトが無くなったら無くなっちゃうじゃん全然俺の思ったんですけど歯セルフの中の@はクラスの中の@なんだデータで気づくですごい時間かかりました分かりにくいところでは分かりにくいと思いますね IRB で超めっちゃ確認しないとわかんないですよね皆思い出さできないのはクラスは CLASS クラスのオブジェクトであること思い出すね員さんをしないことを思い出さなきゃいけないんですよねそれはクラスのインスタ
transcript 0: だからその中の@だからちゃんと正しく動くと痛い海の気持ちになれば普通のことなんですけどねそれでレフメソッドエンドの中で各 at バリアブルと Def Self メソッドの中に書く AT バリアブルはその後バリアブルはどこに格納されているかってのが頭の中に入ってるようにならないと使いこなせないとは思うんだけどまぁなんにせよ AT AT は使うってなった時点で大分負けてるんであっとバリアブルでなんとかなるように考えましょうっていうのが今回のこの地方の締めかなって感じすかねでは正直これもよっこのことだけ使わないと思いますけどねあえて使わなきゃいけないのはそうですね何かあれですよねとプラスを与えないでインスタンスを与えてくれ
transcript 0: みたいな書き方をするのがちょこちょこありますよねあと何だろう最近やってたのはラックをもう1回読み直してたんですけどあれなんかもそのアプリが猛獣ミドルウェア4インスタンスクラス名でのミドルウェア耐えられるんだけど実際には中で初期化するときに全部インスタンス作って武器化のプロセスがあって辿ってくれるんで普通にインスタンス変数として書いてるんだけどあの自分で手でニューしてるわけじゃないので知らん間に増えたりとかがないっていう感じなのかなみたいになんかその辺でうまいことやろうとしてるところは男見る気がしました完全に出たプロルビーを読み込んで
transcript 0: やりこんで頭の中にそれがないとできないってとこなんすねこれ何かこういう仕様は買ってなくても動く方動くわかりやすく動かせる方の書き方に寄せていくみたいな感じにたと思いますので大体これやりたいのは singleton パターンですよこの世界においてどのプロセスの世界において唯一のなんとかを作りたいというときにクラスにつき一変数絶対会ってなかったら作るあったらそれを返してやればいいよなっていう気持ちになって Java とかだと static なんとか市立ポイント文章か忘れたがマジックでクラスができの印刷がなくてもアクセスできるところにちゃんと作ってそれで経由で
transcript 0: エロよっていうメソッド public で話す時につけて使うのは static なファブリックで咲くな唯一の件数何でルビー入ってそれでそれってどれ何て調べたらだいたい行けそういうのがあっとあっとバリアブルなんでこれでええんやってやると竹田継承とかで変になっちゃうから避けた方が良いよってはこの調子でこのあったってバリアブルアクセスとか北ルビーのコロンコロンとドットの違いがすぐわかりますコロンコロンとドットの違いお転んでもメゾット呼ぼうとも読めるのか読めますね宇部るっけコロン転んでたねと名前をスペースではネームスペースを解決するのはころんころんでポットっていうのはメソッド呼び出しですよとうろんころんは定義された定数
transcript 0: うまいことを解決するための演算子なんでなんでもできると割と何でもできると思ってコロンコロンてやるとオブジェクトじゃなくて他のクラスとか返すかクラスメソッドなのか SMS なのか分かんなくてすぐそんなことありませんが起こすというのでいまいちピンとこなかったんですけどまぁ今はだいぶ理解が進んだんで分からなくもないやらかすからダメなんだけどまだ痛いのでできるって感じですかねこのコロンコロンととととかが分かってないとあっとバリアブルのありかとかでそういうメソッドのありかとかこの辺がうまくわかんなくてなんかどうでもいいところで500チームで作った目になっている状況はにはまり込んでしまってあるかなとは思いますねそうですね static がないんでねと PSP だとたぶん
transcript 0: static にしたやつをころんころんで呼ぶみたいな感じがしますねとんどの言語ではそうなると思いますよ結局寝れたベースを接続とかレディースを接続接続文字列とかな肯定的な文字ですが出てこれで定義しちゃうんで絶対避けては通れないものまでこれから近いですがこのどこですかね時間喋りたいというわけでこれでクラスオブジェクトモジュールを終えてルビーに体を慣らし終えましたどうですかこれそうですね序盤やっぱり結構辛いですね会えても次はこれくしょんですよタイ産商バレーとか80とかセットの話ですよこれまたディープなんですけどそうでセット使ってないなあと僕も原稿書いてるんですけどペット
transcript 0: 買った方が効率がいいほど切羽詰ったことがないですよねとか activerecord のセレクトする時にハッシュ形式でゲットする奴って確かありましたよねただ見込んで自動的にもユニークな ID とレコードっていう組み合わせで返すようなありませんでしたっけトラックカナドラメソッド呼び出したやつが返ってるのかな何かでもありますねとか即死するとなかなか使わないですよ富良野レーダーベースがやってくれることで8.5つのプログラムでやんなきゃいけないことがほとんどないしこのセットのところでさっき言った aql 8とか出てくるんですよこれが良いかどうか作った大事になってくるからとまぁそんな感じなんでまた次は第3章16日18日20日21日
transcript 0: やる気を入れて帰りたいと思いますまずは今日はこんなところでお会いしたいんだが7時を回りたいと思いますおはようございましたありがとうございました
