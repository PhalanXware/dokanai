transcript 0: はいじゃあ始めます2019年7月7日22時6分です積んどかないラジオ第7回を始めますよろしくお願い致しますよろしくお願いしますこのポッドキャストはアンチ積読で本を読んでその内容をゲストに説明するという Podcast ですね簡単な自己紹介は大工さん差し入れ続きゲストは渡辺さんですよろしくお願いしますはいよろしくお願いしますはい今回はその紹介をする予定なんだっけあ前回の反省点買いでまだ配信しないんですまた収録しただけでそっか第6階まだ未発達なんでちょっとね先週はね4日に JAWS UG 6日に常時従事しない W JAWS UG 行ってしまったらもうだいぶ時間取られちゃって
transcript 0: 何とか明日頑張って明日も勝者には同時配信かなんかするかもしれないですはいお金は脊柱 will be で今日は第5章行ってきます第5章メタプログラミングデスメタプログラミング前回の反省どころか大きな反省なんですけど僕呼吸が持たなくてなんか後半があって感じな発言が多いんですよ自分でも気づかなかったんですけどまぁでもお前何言ってっかわかんねと言われるときは大体その現象が出てる時なんですけどノイズカットとかするとその声消えちゃって俺何言ってるかわかんないまま終わってるって心が結構あっていうのに気づきましたなんだ人に喋るのが多いのかもしれないですねあの呼吸してるのが待ってられない喋りたくてしょうがない喋りたがりだから
transcript 0: タブンネアイそんな感じで第5章メタプログラミング始めたいと思いますがちょっとね一応前の日から読む本のまえがきのいいんよねルビーはすべてのものを実行時に書き換えられるとなばためさんが好きなとこですねそうですねクラスモジュール個々のオブジェクトの振る舞いでさえプログラムの実行中には全て変更できると新しいクラスを定義したり既存のクラスやオブジェクトにメソッドを追加したりするコードを書くのは簡単なことだ映画にはほとんどないと言われるメタプログラミング Ruby の最も強力な機能の一つであり最も危険な機能でもあるとママこれが前田家の前半で前が今日最後の後半はすべての Ruby プログラマーはメタプログラミングの中のどの部分が安全で役に立つどの部分が問題をはらんでいるかの知識を蓄えなければならない
transcript 0: 全ての Ruby プログラマは本当にそうだろうねまぁでもここでこう書いてるんだから59以上目指すそうなんよねでメタプログラミングは滑りやすい斜面になる奴らそれでこの章はあなたが足元を固める上で役立つはずだというのがこの第5章メタプログラミングの前が来てその他の言語っては Java とか刺繍とかな理由リフレクションがこれに相当するんですけどなんかずっとこの豪華さと初めて出会ったのは REFLECTION って言葉に初めて出会ったのは Java のフレームワークの診察ってやつがあってそれの解説本か何か読んでた時にそんなんあるんや Java もついにそういうとこに行ってしまったんだって思った記憶があって LB ってそんな当たり前にするには
transcript 0: 持って結構感動しちゃっていう曲があります僕の中ではまあ何て言うの声ので車術っていうのよくわかんないけどなんかあんまりあんまり行っちゃいけないというか行っても誰も読めないから相当便利ですねさっき言った診察みたいなフレームワークが内部的にうまいことしてあげるよって言うのぐらいで使うんだってなんか一般的なプログラマが使ってもいまいちピンとこない方ができちゃうんだろうなーって勝手に思ってましたんでそう生活してる中で何だったかなぁ確か今は亡き死んでない今は亡きオクトプレス死んで死んで死んでないんじゃないかなんで鼻の奥とプレスの Amazon 画像プラグインだったかなな面白くてあの Amazon の画像
transcript 0: 改造してるようなとかなスモールとかミディアムとか何とかしてできるんですけどそれ plugin なんでプラグイン偽りメソッド名なんですよそうすると8イメージスモールイメージラージとかイメージミディアムっていうマクロが描けるんですけど北斗プレス側にそれってどんな風に実装されてんだろうなーと思ってソースコード読んだらそのルートがミディアムとかっていうメソッドを定義してるじゃなくてそういうメソッドが映えるようなプログラムが咲いたんですよねもしもある日突然エクストララージトイレが増えたら何かもそれエクストララージって増やすだけでエクストララージっていうイメージアンスコエクストララージっていうメソッドが入るみたいな作りになっててはなるほどなぁルビー上級者怒ること書くんやなーと思った記憶がない俺がマジでリフレクション書くとこんなこと書けるんやと思った
transcript 0: 一発目だったと思い後はメタプログラミング Ruby をお読みくださいって気持ちになるんやけどまぁそんなことはやめといてとりあえずここではハマりやすいポイント今入った何だっけつねりやすい斜面について5 kg するというのがイタイ子星メタプログラミングの項目28日9303条13233343-35までありますなんでこんな苦労したかって言うとね慣れてないせいかねこの書を読むのめっちゃ時間かかっちゃってはできるのはわかったと何が便利で何がハマりやすいかっていう事に気を付けながら読むとなかなか読み進めなくてできるできないだけ見るんだったねえわりとサクサクやめちゃったけどママそんな感じで行きましょう項目28 module CLASS フックを使いこなしましょうモジュールプラザ節句とはなんぞって言うと
transcript 0: ベビーウェイト通り実行時に書き換えられるのでご実家に何かモジュールが定義されているとか確かめたモジュールに関数が定義されました奴がクラスが定義されましたよってなった時にチェックされるメソッドがあるとブックされる伊豆呼び出されるコールバックされるメソッドがあるということなしですよね全てのブックメソッドは特異メソッドとして定義しなければならないそれがまず一つ目特異メソッドってのはこの第一回第二回か切ったやつを思い出したんですけどここでいう特異メソッドって何クラスメソッドっていうことねセリフ.とかセルフ小なり小なりのところで各メソッドですがということに抗議しろよつぎメソッドが追加定義削除解除されるときに呼び出され
transcript 0: フックはメソッド名しか受け取らず変更が行われるクラスは与えられない何が変わるコールバックされて昨日コールバックって言って通じるんかな来て9月まりメソッドが追加されたぞでときに呼び出されるものは行けそうに来るのはこういう名前のメソッドですっていうのしか来ないんで何かご自分が所属する他の自分の持ってる他のオブジェクトと家族星を見る時には台詞を使いなさいというのは孫に相手をしてさらに細かい事言うと singleton METHOD ADD メソッドを定義した時に呼ばれるフックを定義するとなんとツインゲートメソッドが定義されましたってシングルメソッドアンディと呼ばれるっていうのが注意してくださいねってのは一つといろんなクックとか何々した時にこれは呼ばれるっていうメソッドあるんだけど Extended オブジェクト
transcript 0: Extend OBJECT append フューチャーズ teacher teacher to future 頭がオーバーライドしないでくださいもうでもそんな私はこれをたぶんこれに対してやり何かしたいときは Extended オブジェクト化してエクステンドオブジェクトの場合は Extended append フィッシャーズの時はインクルーデッドプリペンドフィーチャーズの時はプリペイド使いましょう江戸がここに書いてある欲しいです女の子の胸情報量が多いすねお金はこの本読むと項目にはありとあらゆるメソッドが乗ってるんですよこういう時は後輩付き合いなんだよってその時にでも注意しなきゃいけないなこれ何だよって感じの札を呼んでと思ったのが邪魔ってかファイナルってキーワードがある
transcript 0: もうこれオーバーライド禁止だからって言うコンパネだなそれとも Extended オブジェクトとかもう Extended to Extend ちゃうね Extend OBJECT append フィーチャーズとかプリペンドフィーチャーズはファイナルなぜきっと他の言語でいう集まりにもうこれを変更しちゃうともうルビーでいられなくなるというかしたっていいことないかなあ笑で水晶はいくつてんだよというような感じなんかなーと思ってくれますよねとりあえずねそうそうそうそうそれは渡辺さんの良いところやねその壊し方はあまり意図通りではないけどコントローラブルではない壊れ方なので開いなるって何だっけ何とすると死ぬみたいなの買っ子供が描けるんですよね
transcript 0: ここで帰ってたサンプルはほとんどがそういう散歩でしたねたとえばもう継承できないクラスを作ってみようとかそうですねありますが僕も昔はルビーノ美兎アップで何かそんな話をしたような気が金沢 RB ってあの毎月第三土曜日に金沢市でやってるあれですか晴れですね晴れの音と7回も食べますよねその時はみんな方法と感じでしたよね言われてポカーンとしてだと思いますよお疲れさんは細かいだっておかんとさせる目的で喋ってましたね確かに現行のリフレクションとしてこいのあるかなそういうことをしようと思ったらできるって言うのは面白いなと思いましただってねこのエクステンドオブジェクトも今入ってしまえば
transcript 0: つもりの Extended とかリンクルデッドとかそういうのお話ができるとかなねこのメソッドはオーバーライドされそうになってますがダメダメていたらエラー返すとかできますねエロレズすればできるといいですね逆にあるスパロボみたいなこともできますねいいねこれを読んだらそういうことできるんだって思いましたちょっとコールしちゃ駄目って言うとですねここのサンプルは何だったかなたしか URL を指定するとその URL に応じたプロトコルでダウンロードできるものを作りましょうみたいなナマズ BASIC Download ベースダウンロードベースクラスがあってそこには言われると請求できるだけなんで実装するクラスは各それを継承して例えば FTP クラス作ってなかったら
transcript 0: TB コロンプラス等って書いてあったら FTP クラスのダウンロードメソッドを呼ぶみたいなことをやってたけど本当なんだろうテンプレートメソッドパターンぽい感じですとかじゃねようはクラスを作って言われるニュースとか言われるを渡すとその URL に適切なクラスのインスタンスを作って書いてみたいそんな感じだったので実際の音となんとかみたいなのもこんな風に使えませんでしたっけねあーなるほどねなんか知らんけど言われる渡すと適切な Downloader はインプリメントされた関数が呼び出せるものが帰ってくるとですねそのぐらいちょっと高いと楽でいいなこっちとしてはそうそうなんすよね
transcript 0: インジェクション DI corte ペンションじゃないけど結局せっかく共通クラスとか仮想クラスというか抽象度高いクラスでうまいことをカプセル化とか抽象度高くしてるのに結局 FTP だから FTB インスタンスいるわとか言ってみたら ac 1 B 3シールを貼ってこっちが指定しなきゃいけないとなるといまいち抽象度高いクラス使えなくて結局具体化的なクラス使っちゃうじゃんっていう問題になったどうしてもあってそういうのはこれで解消できるって感じがしてましたねおやすみ2013年ですね今は金沢 RB 7周年でしたっけつぎですそうそうだってことはもう掃除してて初期オブ初期ですねなんかカレールーの話しようかって言ってもあってそこそこきたんだけ
transcript 0: とらしょう蓋開けてみるとルビーってもっと結構ぶっ壊れてるぜっていう話をぶちまけちゃう会でしたね今は盲目28円てますけど項目32で何か色々とレールの昔の名物ってこんなんだったんだぜって話が少しだけますたぶんそういうぶっ壊し型だったんでしょうねきっと今度の28なんかすごいのがあってメソッドそのものの話もそうなんだけど8 include とかエクステンドみたいなやつもなんかその話まとまらないなこれそうですね難しいな心でこの本でも特にこれだけは注意しろって言ってたな結局子特異メソッドとして来なきゃいけないよって言うことといろんな関数あれどオーバーライドしています夫もあれば気にしのメソッドもある
transcript 0: ちゃんと嫉妬しとけよって言うこの二つが一番な気もなったとまあそうですねアテンドフィーチャーとかなんか include 書き換えられるみたいなのは一通りやるとおもしろいですけどねほどね後本当に標準のコールバックが結構いっぱいあっても僕が昔あった資料を今見てるんですけどモジュール大文字から始まる module . Private メソッドグループで最後血が ED で終わる文みたいなのをやるとインヘリテッドとかインクルーデッドとか Extended カプリヴェンデッタとかそういうのがわらわら出てくるんですよこういうメソッドがあっているのでいるよをみたいなのをいいたかったみたいですねほんとねこんなことでこの
transcript 0: そうですねちなみにこの本のサンプルはレイジングハッシュっての作っててエイジングハッシュって何って言うと存在しないキーを指定すると汁が買えるんじゃなくて例外が起こるっていう走りを実装してみましょうっていうのをまずでそしてそしてたのでどういう事やってるかっていうとまずクラスという作りますと以上先の発送を用意しますね4はダブルでそのハッシュにメソッドをプロキシするんですけど前回前々回かなで言った通りティントアンテイン戸塚フリーズは自分もフリーズしなきゃいけないと令和移動した上に自分にもそのメソッドのスーパーを呼ばなきゃいけないっていう仕様なんですそうしないと10位と安定にとフリースがまとめ
transcript 0: 内部的に持ってるハッシュにそれはやるんだけど自分自身の虎呼ばないからダメなんだよだからそれの場合は異常するだけじゃなくて自分自身のスーパーを読んだ上にさらに以上先のやつを呼びましょうねだからそのぶんだけ関数並ぶんだよっていう実装が前の日そうだったんですけど今回はメタプログラミングでスーパーを呼び出す関数リストってどの定義できるみたいな二乗する関数一覧ですが4 w で聞けるんですけどさらに加えて移動した上に自分のスーパーも呼ぶっていうメソッド一覧をそこに書くとスマートにクラスを定義できるって言うのをサンプルとしてどうかと思うとの名前も書き換えちゃうの名前を書き換えるじゃなくてあそうか異常だからそうですね相談するだから4 w では
transcript 0: 済ませられないものについては一旦以上先ねと読んでさらに自分のスーパーも良くって言っていうメソッドを生やすメタプログラミングをしてるというなるほどなと思いましたそれ使えばさっき話してたよ春さんくしょんはやすねさっき言ったとおり画像のサイズ small medium large っていう文字列一覧を定義配列を定義しといてねその蜜をイメージアンスコの末尾に持つメソッド生やすとその他数名に応じてたので L サイズを開始な違う物を返すというような実装なっててそういう風に関数を生やすプログラミングをかけるって言うのは雨だと思い曽根 friction Lap この松の木枝28分ではそうなった時にはい今追加されました
transcript 0: た時になんか色々処理は限るよってのが一旦項目28で更にそれを使いこなすにはいろいろ試験がいるよっていうのが28ってどうですねそうですね今から29までいきましたねほんとやねよく29はクラシックからはスーパーを呼び出そうという話でそのままやんけという話なんすけど毎日ライズと同じで何も継承していないように見えて本当はオブジェクトを継承してますよとある日突然 include とか化粧とかするよいなかったらこれ別に継承してるわけじゃないからスーパー呼ばんでもいいわって思ってたのがある日突然スーパーを呼ばなくちゃいけなくなっちゃうことがあるのでちゃんとラスクからスーパーを呼んできましょうねっていうのが公務員初級ですねまた親メソッドにもある物を使う時にはスーパーって書いててもいいよととねこ
transcript 0: 和光北の写真とか粉とかでしょうを開いてんコモリ面白いけどね夜の時間がかかった理由としては宅建レイジングブレイズが発生する発信レイジングハッシュみたいにこう言う風に書くとたくさん行数書かなきゃいけないしやっぱこのメソッドモバイル鮭ではこのメソッドのオーバーライドしなきゃいけないって会った時にソースコードがめちゃくちゃたくさん書かなきゃいけなくなっちゃうでしょそれよりも強いとせずんだよっていうのを頭に入れながら読んでやっとはーなるほどって歌ったんでちょっとピンとこない方は申し訳ないけど FF 2 RB おすすめていただいてそうですねなんかチョコとかありますけどね自分でもねなんかパターン化されててこれとこれとこれとこれいるよねみたいなのがもう頭で解ってるやつでとりあえず仮
transcript 0: 倉庫に置いときますみたいなのでも使うしとつげきますか項目29もあったんで放牧30 METHOD Missing ではなくてファインメソッドを使うようにしましょうと説明が面白かったんですけど LINE をしてみますねルビー車洗車は METHOD Missing な存在を知るとまるでぜひ使ってくれと言わんばかりの汎用ツールを見つけたとでも思うようだと思いますかを使わんですね彼らがシャワーを浴びていると METHOD Missing が施工中に入り込んで来て昨日からは何文に対する回答完璧な答えは自分だと触れ込みでもするらしいぞなんだかんだで METHOD Missing が無理矢理にでもコード中に入り込んでくるなぜそんなに魅力的なのであろうかとなんでだって書いてある内容に
transcript 0: メソッド名を自動的に SQL に変換するという考え方は気に入ってますかとメール頭痛を見ようひどくなる一方であって頭ですけどレールずつで知らないけどマジな動くものにされる砂の本格的に使ってんのさんから何すればいいなと思ってはいるんだけどなるほどね3になってまーぶと統合されて非常に良くなったっていうのが10年前の話なんすよねって AV やっている相撲一位とか2位の頃はまだ太閤岩のフレームワークあったんですよああなるほどね3の時にその対抗馬と統合されるっていうミラクルがあるほどね今しゃべっててわかりましたこれはインドバイなんとかですねこれははいはいはい kind by 今 Find by
transcript 0: Viber Find by しかないか今は Find by かっこ絡むキーワードでからムコロンなんとかなかけるけど昔は何か Find by カラム名書けませんでした曲かけますねあれ多分これこの内容から予想するに METHOD Missing になって METHOD Missing だから多分これで好きやろうやろうってことでなんかカラム名を予想して組み立てて生徒するって事やっちゃってたんですか昔はそうだったのかもしれないですね気力な一方大暴露したやろなあ多分な多分これは全然わかんないですけど1日あたりが好きなんでしょうねあのこれ activerecord は多分治ってると思うんだけどアクションメーラーはまだ使ってるはずなんですよアクション命は結構長いことしてますよメールを送るのにそんな謎のカラム右手若園関数関数面積フィッシングフックして南下しなきゃいけなかったある
transcript 0: ほんのりと思うんだけどアクソメらの実はなんかそうなってましたねなんか嫌なんだちょっと思い出せないけどアクションカメラのメソッド呼ぶと ACTION Mailer のインスタンスじゃなくてメールインスタンスが買えるんですよね確かレビューを探すとかそういうのはいい具合にするんだけどみたいな母結構変なキットどうしてて確かに昔のアクションメールアドレスでわかんなかったことあるなぁ今はちょっとどうなってるかわかんないですけどなんだっけさっき言った通りパターンじゃないけどアクション名なってきてクラスなのになんで実装がうまくうまいこと動くんって言うのすぐ不思議に思った昔記憶がある気がする多分それ近くでやってんのかなそれまでもんだからやっぱりねそういうのが割と好きな人たちが作ってる傾向は確かにありませんなんだから触らせてくれよって言ってますかねまるかもしれないかと男のアクション
transcript 0: METHOD Call がそこまで蛇にならんでしょうっていうのも多分あるんだと思いますけどねなアクションでやることその間何回も呼ばれるみたいなのも誰もそこまで想定はしてないと思いますけど多分そうでしょ今急に入れちゃうもんなアクションメーラーの send later そういうことかそういうこと考えてますね相次ぎ METHOD Missing フックしてあれこれはレスポンドっちゅうに反応しないからダメなんだということが書いてあるしたといえば Find by ネームっていうのがあってバインドバイネームを呼ぼうとしたら METHOD Missing になって METHOD Missing フックでその前のあとを切って SQL 組み立てて関数実行するみたいなことをやるとダックタイピングでこのメソッドを持ってるって聞いて動作する
transcript 0: 受けるためにはレスポンド2に反応してくれないとそれは書けないんだけど spend To Find by ネームって行っちゃうと METHOD Missing の場合に実行という言葉を実行するとやってるかなレスポンドって反応しなくなっちゃっただからダメなんだよっていうのが7ページにかけて会社にご本人が司会者のページが出てくる確かにコンポルビーの根本が死んじゃうって分かりませんごめんねなので METHOD Missing じゃなくてでファインメソッドを使えというのが書いてある事をどうしても METHOD Missing を使わなきゃいけないっていう場合にはレスポンド2 Missing はてなっていうメソッドがあってこれをオーバーライド指定子しろということが書いてこんなにって言うとされすぽん度2の内部的に呼ばれるメソッドでこれはマジで存在し
transcript 0: ないのっていうのはこれで聞いてくるぞこいつが結局のところするとフォローし返すかでレスポンド2月力が殺さ返すんでレスポンド2 Missing はてなクラスオーバーライドメソッドをオーバーライドしてみたいことやればレスポンド2もまあまあよくなってのが理由その一その二メソッドっていう名前のメソッドがなんですってましたメソッドオブジェクトを作るやつですねそうですねそういえば数字の1.メソッドかっこシンボルの2 S かっことじるとインテジャーの2 S っていうメソッドが帰ってきてねこれを.コールするとちゃんとメソッドが実行されていたのですが実行されるといいんですけどもうここでちゃんとメソッドが返すかどうかっていうのがさっき言ったですポンド2 Missing
transcript 0: 名前がちゃんとあるが動画も見てるよっていうのがそこに書いてあるは何でレスポンド2に反応するように作んないとルビーとしてはツマンナイダックタイピングとはなんぞやという話になっちゃうんでどうしても METHOD Missing 書くとしてもちゃんとメソッドがあるかどうかっていうのは DESIGN METHOD error METHOD Missing じゃなくてディファインメスを使わなくちゃいけなくて METHOD Missing はどうしても使わざる得ない場合にはちゃんとレスポンド2 Missing までそうして正しく responder 痛感しとけよって言うのがここに書いてあること会いたいですね難しい難しい市鈴鹿市これがないから苦労したっていうサンプルが全然魔7ページにわたって書いてあるんですけど結局はハマるんでしょうねちゃんところやっとかないと何かあった時に気にしてなかった
transcript 0: そういうことやったんかって言ってたんでしょうねきっとこれあると思いますこれは何歩で S Pond 2にだけは正しく動くようにちゃんと作れよって言うのが言いたいことで部活それも緊急性が高いものであって本来は正しくデザインメソッド METHOD Missing 服装ジャケデザインメソッドを使っててください定義したメソッド定義しろよってな感じで強く言いたいことと思いますちょっと Missing のさっき言った Amazon の画像のスモールミディアムラージを取るメソッドもちゃんとデザインメソッドでちゃんと話してました雨降って Missing でフックするのが一番簡単に見えちゃうでしょねきっととりあえず動く床までなら動きますからねラインでそっとを書かないで俺が梅里ミシンを最高ここで全部フックすればええやんたったら METHOD Missing をオーバー
transcript 0: して中でスイッチ分解てなんとかだったらこっちなんとかだったらこっち正規表現でなんとかにマッチしたらこっち高いちゃうとですねそれがルビー初心者がシャワー浴びてる時に行っちゃう問題ことができそうですね気をつけます今はなくて子供の前でファイメソッドたはずですけどねアトリビュートの存在が分かるやつくれるんで吐いちゃいましょう重く31もう42分なんだけどだいぶ痩せましたもう36分も喋った&&&慌てるか相次ぎ31 val val val val の様々なヴァリアントの違い
transcript 0: ちょっと待ってお前の無知蒙昧31プラスのエヴァの多様なあこれなんかだってきた木字が間違ってる本の目次の名前違ってるかな初代パンダにゃん何か違うのかもしれないしねばーるの多様な店主観の違いを把握しようってのが日本に書いてあるのであまりにも色々種類がありますって話なんですね皆さんそういえばルトクラ水原の違い分かりますかとかそんなことが色々書いてあってメイン山水バルワインサンスネバレエクラスはクラスの今それはスマートで例えばクラスのインスタンス eval したらどんなメソッドが生えますかと答えはクラスの特異メソッドクラスメソッドクラスに対して陰惨3貼る大文字から始まるクラスなんかこっち出てきたユーザーとかそういうものに対して
transcript 0: . in 3歳バルソルトクラスメソッドが映えますやっとお休みですねメジャーインスタンスに対して印刷 eval 者と何だって言うとオブジェクトの特異メソッドここでいうオブジェクトの特異メソッドっていうのはそのオブジェクトにしか生えてないメソッドのことですねその特異メソッドが映えますよという話クラスに貼るはそうじゃなくてクラスに対していますが実行されそこで手配名参加すれば電話にされますよっていうのがあってでそのそのクラスに貼るっていうのはモジュールクラスの特異メソッドモジュールクラスのクラスメソッドなんでそうじゃないオブジェクトには使えませんよとは例えばなんか person . NEW してそれのオブジェクトのクラスに貼るといやいやいや君はクラスオブジェクトじゃないからだめだよって言われてアナとモジュールクラスに生えてる特異メソッドがクラ3番なんていやいやいや名前おかしいやら module eval しろよ
transcript 0: というツッコミあるんだけど実はあって実装も同じでネーミングが使えませんてるだけですよと話しされた後エグゼック妖怪ウォッチ6知らなかったんですけどオーバルみたいにエグゼクトだってエグゼ国ブロックを渡すとその引数を渡されたエグゼキュートブロックは出せるんですけどですがブロックの中にはその引数なども表れててそのブロックが実行できるというのがエグゼ暮らしに貼って書くと文字列を渡すじゃないですかこの文字列を貼ってねっていうことないですかもう終わったそうですねとなくてエグゼイドって書くと思うそのコードが実行されるとしとったん知らんかったですよ使ってないですがいい悪いブロック渡すのはやります
transcript 0: メバルにブロックを渡すととななな自由ほうきのような気がしますけどねでは愛は引数が違うのか男のインスタンスにボルネオ引数を渡すことなのやろうっとキスを文字列化ブロックを受け付けるのに対して引数が何だったっけ足傷のないんけあーそうだね算数のエヴァ文字列しかブロックを渡せるブロックを出すと同期実行されるのか60個されますねことはエグゼイド動画エグゼは引数が渡されてたけどそうみたいですねこれはなるほどねさん水分いるブロック使ってなるほどね8インスタンス eval はブロックを実行するときに台詞に
transcript 0: 千葉を渡しオナニーを無修正でブロックを渡しますという感じですね二に美術とオブジェクトがセットされるのでブロックはまるでインスタンスメソッド内部インスタンス変数を直接そうだねこれは役に立つこともあるはカプセル化を破っていうのが間違ったことしますね基本的に貼るばっかりしか見ないな系統と4文字しか書いてないやつクラス eval module eval ばかりじゃなくていい割るを見るクラスグレーチェックはあまり見なくなったことないスね見ないでこれで定義するともちろんインスタンスメソッドになりますよったらそれはそれを手にできないという話は実はこの男が何を把握しろってこれで粘るの多様な編集版の違い
transcript 0: 隠し要素全然説明がないと思う今の説明でたまにですけどさっきのそのプラスいいわるって駅できませんっていうのがあってもできませんみたいなのがあったりしますがつるの違いが説明できれば参加オーケーだそうですねでもたまにはまってんでどうしてるかと言うとインスタンスから見てプラスに定義したいんだけどで思った時に Self . Class . in 山水バルみたいな書き方で逃げたりはしてますが骨となりに+ LTE 格闘それはクラスにたどり着けないといけないからなんかうまく動かない時もあるんですよね
transcript 0: 結核とわかってもそれするとクラスの特異メソッドになるからインスタンスには生えないですよねそうですそうですタップはそうですねだから自分の所属するクラスの特異メソッドが入るんですよねそれその他塗装自分のオブジェクトにそのメソッドが入るんじゃなくてその親クラスのなんとかって書いたのはそれが事故で言うてくださいコンサーンでまたレールの話になりますけどこんさんでモジュール読むじゃないですかでモジュールを読む例えばモデルが何個か何個かのモデルが共通のモジュールお金さんが入りたいみたいな時に行くので裏側からクラスに手に入れるみたいなことをなるほどねやってたりしますねママにお礼をインクルードしたって事はおま
transcript 0: こういうものは痩せよってのモジュール側にかけるとこですよねそうですねあそっかそういう風にかけるまあこんな形で LINE 山水花と暮らすウィーバーの違いが分かるんだって Ok と重く32 MONKEY Patch の代わりとなるものを検討しましょうモンキーパッチとは何ですかモンキーパッチっていうのはここに書いてあるとれーるずにはアクティブサポートでライブラが含まれているがこのライブラリはほぼ全てのルビーコアクラスを書き換えるとオレオモンキーパンツという時なんですけどもまつまるところルビーって後からクラスの意味さっき言ったいろんなメタプログラミングで変更できるかな突然オフとリンクとかりんと2のオブジェクトメソッドインスタンスメソッドを変更したり改変したりあやしたりできることですよね
transcript 0: その結果としてそれをモンキーパッチとなんでそうやってやる日のライブラリメソッドなのかネイルズアクティブサポートのメソッドなのかが素人にはわからないもんだよね海外の質問サイトとかで変な質問して大臣常識であってるんですよねそれは知らないけどまぁねなんだっけ渡辺さんとも話をしようねこのメソッドって歩ってありますよねそういうのちょこちょこ一番有名なプレゼントとかなプレゼントはないよねそのものにはないですねしかもプレゼントってすごいよくで人って何だっけいるか長さ0の文字列はお留守お留守になりますねそんな感じでではめっちゃ便利だとかの言語に比較的近い
transcript 0: 別に対して素直に入ってんだよねごめんねこれも字が入ってるからこっちとしてはなんか知らんけど生えてるから使ってるんであってそれがルビーが元から用意したものとか activerecord が用意したものかはパッと見はわかんないよねていう問題があってそれめっちゃ便利なんだけどその代わりにこのリファインメントっていうものを使いましょうというのがここに書いてあってこの本結構古いんでルビー2.0以上で登場した機能ですよってことが書いてあって2.1では本日となってますよとは見ない事が書いてあったと思いますが僕にデザイン面と実は全然使ってない馬鹿も買ってみたことないです1回再起動しませんでしたあそうなんだリリース顔が記憶になったりとかしなかったっけなあーよく覚えてない慣習
transcript 0: この本の端っこの方が出た2014年9月時点である B 2.2のプレビューはが出てるらしいんですけどその時にはリファインメンツに対する修正はないんではとりあえずリファインメンツァー今から僕が説明する通りの基礎になってるはずですねちなみにどんなもんかっていうとまずモジュールを定義しますと例えばモジュール only スペースっていう文字はどういうも充電するかっていうと文字列がスペースだけかどうかっていうのを調べるメソッド生やしたいと文字列に文字列. only スペースはてなって帰って格闘含まれてるのが空白文字オンリーだったら出るよお返しそうじゃないまたホールソー回すっていうのを押すとリングに生やしたいとこれまで通りのやり方だとストリング様に対してそれを手配ミストって生やしちゃうから小岩井モンキーパッチで Ruby の用意した機能なのかそれとも
transcript 0: 鳩ヶ谷したメソッドが分かんないっていうのが苦しいたかったんですけどこのリファイン面子っていうのはまずモジュールオンリースペースと書きその定義の中にリファインかっこ鳥のかっことじると書くとつまり今から string をリファインしますよとリファインってなよりよくするって意味なんかもしかしてこれ良くなるか悪くなるきっかけとなりサイン括弧文字で使ったストリングかっことじるとかいてベッドでブロック海底でそこでメソッド定義するとねそうするとこのモジュールをインクルードするんじゃなくてこういう神宮と書くとは例えば Class person you 神宮モジュール名ここでは友人オンリースペースって書くとこのクラスパーソンの中だけとリングに対してオンリースペースが入るとどうしてきやろっていう花ですねさらにコネレキシカルスコープ
transcript 0: 自己スコープ何でこの前のコロンコロンが実はいるんやわっていう話と同じでとにかくそのファイルの中でかつそのクラスの中でオンリースペースが入るんであって継承しちゃうとなんかオンリーセンスも継承してな感じにするんだけど単にレキシカルスコープの問題でそれに乗りスペースたわからんってどうなっちゃうんで新しく継承したクラスでもちゃんとユージング only スペースって書かないと塾解析失敗してそんな Only スペースが決めとったらんって言って終わっちゃう奴だから継承も問題ないどう問題ないかって言うと検証をした先も腰を使いますよって改めて書かないといけないんで本当にも限定的なところでだけモンキーパッチを当てることができてできやんでいう話ですねなるほど
transcript 0: 追分で覚えておくべき事項については以下ワインメンツはもう実験て機能しないんでちゃんと使おうぜって話とレキシカルスコープアクティブ化しなきゃならないよって言うと何でしたっけテイルズのビューとか作ってると話したいなって気持ちにならないこともないです何かねこの特有のものありとかの印刷をはやしたいなと思うことはなきにしもあらずですねリファインメントまで書いてまでやりたいかなーなかなか選んだヘルパーメソッドって元ヘルパーぽっかりちゃうなあって感じしますね何でしょうねなんかでも最近もクロ魔術的な奴の頭をもうちょっと甘くしましょう何だっけあれトレースポイントでしたっけあそうか何かありますか区割りは違うけど違うのか
transcript 0: そうですねればいいメンズ尚弥使いこなせればいいんだろうなっていう気はするんですよねその時に自分が使ってるライブラリだけ書くとが美味いこと美味いことねできるといいよねみたいなので電話してあるにはありますよねそのまま地面に4 WD は何だかんだで色々やればいいんだけどちょっとカジュアルにここでた気使わせたみたいなのはあってもいいだろうしいいんでその機能だけをたまたま便利だしこっちでも使おうぜみたいなのもまこっちっていうのだけに適用できるあっちこっちには影響しないというのはまぁ確かに嬉しいかもなっていう気はしますけどね結局ヘルパーモジュールとかモジュールに分けて細かいモジュールに分けてなるべく
transcript 0: うるさいしなければいいように作っちゃうから帰っていいファインメンツにしなきゃいけないみたいんかあえてリファインしなきゃいけないってなるとこういうストリングとか悪いとかハッシュとかこういうプリミティブというかルビーが持つライブラリのところを弄りたい場合にだけ使った方がいいですかねえーとですねあの子の所に自分の暮らすことで駆け抜けたやつ買って来たのモデル書いてこのモデルに恋人と話したいんだけど俺はコンテキストとしてそうなんだちゃんぷりけーしょんモデルとなった気では規程モデルに友人グって書いても使えないわけだからな難しいな2のモジュールをインクルードするのよりは気軽なのかな
transcript 0: 変なメソッド定義するよりはいいんかなここでいう変なメソッドっていうのは Private METHOD じゃないですけどなんかそういうメソッド早島線便利メソッドみたいなメンバー変数にアクセスもせずメンバメソッドもメンバって言わんのか伝わってはいますけどインスタンス変数インスタンス変数にもアクセスせずインスタンス関数インスタンスメソッドにアクセスせず円周率をかけるだけとか当たってきた引数を2乗して免責にして返すとか正方形の面積なぜか S とかならそういう難点ですが本質的にメンバー変数にアクセスしない単に便利な文字列パース機能とか数値計算ライブラリとか作ったのですかそういうのをここに書けばいいかなと二乗する
transcript 0: そうするとなんかそういうことやりたいんだっていうのが分かるのかなばかりずかしーなー module function でもいいような気もしますけどね午前とかクラスメソッドこれ便利メソッド店とかっていうのを森永呼んでねーからなそうしといた方が断然いいことも多いからなぁまあでもみんなとてもインクルードしたモジュールがさらにあれをインクルードしてみたいな乗って分かんないじゃないですか最終的にはどうなのかっていうのはね相当知ってないとわかんないよねそうそうそうなんかそういう気持ち悪さはだいぶ軽減されるとは思ったほどでたくさんインクルードした結果とトリムのメソッドは何が入ってるかもわからんていう時に六ジングって書いてあるとも明示的にはこれが使ってるなとわかるとこですねそうですねそのモジュールの中で読み
transcript 0: 混んでる include の夜とかはもう人じゃないわけですよねそうすね一括一髪読み込んだら何が起きるかわからんていうのはちょっと避けたいっていう気持ちが強いといいのかなこれ誰かがほしいって言ったからできたんやけどなぁ先日のキャッチすると同じもの感じるのは大好き項目33を1時間喋ったね重く33まだ35まであるからね後三つあるから頑張りましょう項目33タイミングで書き換えたメソッドを呼び出すエイリアスチューニングでわかりますそうですね A リアステー人具ってリピートしては普通に猶予ますかこれ何だっけなサポートで言い始めた日高原のような気はするんですけどなるほどねまえりあ
transcript 0: 何ですかってこれ読むとメソッドをハイジャックし最終的に本物バージョンを呼び出すことが可能なつまり呼び出された実は偽者を選んで内部的には本物を破って言うチェーンが繋がってるから入りやすいタイミングっていうかなネイビーこんな感じだったと思いますがここでやってるのは alias METHOD 使ってまずメソッド名複製しますと例えば関数いって言うなったら alias METHOD 関数へダッシュっていうのを作っておくとでレーダー設置の作ったあとに絵をメタプログラミングで歌詞書いちゃうとか聞かれた結果今の撮ることに成功するとメモ A ダッシュは残ってるからその則った関数の中でグチャグチャして中で出しちゃうとそれはハイジャックした上にオリジナルノベルでメソッド中には出来てますよという感じでサンプルではあるいんの
transcript 0: 大江戸線と L っていうだけのことでそれを頑張って営業して人がしちゃってまず array のファーストを歩いの1st without ロギングっていう名前にコピー職種とは例のファーストっていうのをいじくり回して中でスタンダードアウトにログを出力する上にかけるゲームスターバーストウィザードのキングって何億という風に行ってその結果 array のファーストであると同時に数億にログが表示されてその後にちゃんと正しく僕らが知ってる array の橋と呼ばれるっていうメソッドこういう風にするんだよっていうのはサンプルじゃなくてますここに書いてある覚えておくべき事項としては苦戦する時にちゃんともありますチェックお城というのはおかしいですよねえ何してんの
transcript 0: でもできるようにしとかないと駄目な子になっちゃうよっていうのがここに書いてあることですねやりますか相当ってバッグあまり下がるかもしんないしね昔よく見たのはあの5人でプレケージドのモーニングとかああいうのでどこと組む気はしますね今実は alias METHOD CHAIN ってアクティブサポートも行っており自身が出て消えていってますねやっぱり乱暴な使い方ができたうっていう花よしろんでなくても今見てるほうにしてるサイトを見ると結局 module prepend でいいんじゃねみたいな感じになってますモジュールプリペンドの話は35日なお城アプリイベントできますよっていう書いてありますね
transcript 0: 何時に雨でも日本語としては言っとき非常にエイリアスメソッドチェーンっていうのはいっとき流行りましたねとするとかほんと使いでしょうねこう他のメソッドからねさん他のライブラリちゃうなプログラムのどの部分からはこのメソッドを呼んでそれはどういう場合呼ばれてるんだなっての詳しく知りたいっていう場合には何かこういうのうまく使えばできるんだろうなって感じしますねそんなのそれは11スタンダードアウトに backtrace だしちゃうけどあーあーっぷらこれあれだし言語のデザインの兄と同じものを感じるなリリース版のライブラリとデバッグ版のライブラリの違いというかなるほどそういうのには入れ替えできるのかというファインで C 言語の場合は
transcript 0: 面白くて Microsoft の昔のヴィジュアルシーンはメモリ過去数字か文字列とかその他もろもろでもするとなんと特定の文字で埋めるんですよ確保30バイトの文字列用の料金を確保しますがそうすると手続 C 言語初期化メソッド書かない限りはただ30バイトの中身何が入ってるかわかんないですか絵文字が汚れたまま何か入ってんですかデバッグ版はなんと30倍の確保した上にその中それで終わらずにその中に kcccc CD だったかな CD が CD で埋めてあるんですよなると何がわかるかというと絶交してる時にこれしかしてないとか妄想なんか誰が書いた後にも行か書こうとしてるとかっていうのが5で漫画を使うとわかるとでもそれって今晩ゲームするときには邪魔なロジックですか何かで埋めるなんて
transcript 0: だからちゃんとおそ入れ替えてリリースバルブ場合はそういう機能が無い奴は入ってるというようなことをやりたくて例えばレイルズの環境変数がデベロップメントだったらこっちのメソッドあんたかだっとこっちのメソッドっていうのを書こうと思えばかけますか何かそういうことをやるとデバッグとか相当遅いのにいいんじゃないかなーって感じがしてきましたお得にログアウトとか綺麗に来てるかもしれないしね動画の出力の切り替えとそれもただの if 文でいい気もするんだよなまあまよみんな読んでる側は綺麗なまま行けるのでしかも m- Pro でやると実行のために if 文が呼ばれたことないのが良いとクラスを定義した後ですね相間デベロップばんだから動画は標準すぐに出そうとなってはなってなっちゃん
transcript 0: もう何も考えずに表示するモデルとそれがわざわざ if 文田中実エンバイロンメントアクセスしている部分で売上をになるとおそらく CPU に優しくないでしょうねきっとそういう時にこういうのはこういうのって何もそれも十分なんでしたっけ今までのデザインメソッドとかでもできたと思うんですけどねだけどまぁ置き換えるって意味ではこのメソッドエリア支店に8000円勝手な便利なのかなといろんな噂があるもそれでは3月34ブロックの引数の個数の違いに対応できるようにすることを検討しようごめん日本語が変やブロックの引数の個数の違いをに対応できるようにすることを検討しようぜ体ルビーではトップクラスのインスタンスが多数使われるとかとロックオブジェクトの少なくとも7種類
transcript 0: の作り方はすぐに頭に思い浮かぶもの食べませんことしたかもよすぎるやろまあ知らんだけどなんだかんだ言って Ruby って何ですかクラス片方を気にしないで実行できることが多いかないちにちこれはないのにクラスのインスタンスたんだなーって思うことあんまりないし使ってる使ってるだけならどうなんだろうお前ん家来てますよ笑と思ってるな創価中正路高桑を持ってるかなこれはモデルだとかこれはヘルパーのなんとかなんとぐらいが思うけどなんとか思うかな確かに思うか思わ方風呂釜できんよなでも毎日これが Block OF LOCK OBJECT 型とかって言うと思うなブロックブロックとはなんぞやとかね
transcript 0: 竹綱サンプル実行するときにやっぱ.コールとかうってうってことはわかってるからでしょって言われるとわかってたからだよなっていう気持ちになるはそうかそうかつまりこの作者はこうするとブロックオブでできるよねって何月ぐらいは思い浮かべたんですね凄いですね俺そんな持ち込んけどなここで書いてあるのは弱い proc オブジェクトが強い proc オブジェクトがありません後で用意プロジェクトロックオブジェクトとするプロジェクトが何かって言うと強いブロックオブジェクトは引数の数が違うと揚げ麺とエラーで団体名等は何とかランタイムエラーが起こるのが強い proc オブジェクトですがとは定義してもの時はそれができるのって言うとメールと引数のブロック実行する入れると書きますかねその人って書くときは弱いロックオブジェクト引数の数が合わなくても読めちゃう
transcript 0: 足りないところにいるかパーキングされるっていうのが JavaScript っぽいやつ強いはラムダアロー演算子ですねこれはもう引数が合わなかったらエラーになりますよというのが仕事なんで強いブロックですが可能性があるから引数の数あってないんじゃねえとか何個いるんじゃねっていうのを推測しなくちゃいけないことがやっぱりどうしてもあると思うのは便利にどうしてそういう場合にはブロックの it クラスのインスタンスメソッドのアリエッティ林佳奈雁来メソッドっての使うとこの引数の数がわかりますよ後でこの引数の数のばかりだ立つんだけどくせがあって体の数アクセス数だったら引数の数ですよとマイナスの数だったらオプション引数が組まれても
transcript 0: 摂津引数の個数の1の補数2ビット反転ですねビット版で歩数にすればこれですいません僕のメモの歩数の方が間違って度数の方はお気軽歩数ビット反転すれば謎が解けますよというのがここに書いてあるでもした笑いが出るくらいしか知らなかったなるほどなと思ったけどあんなこれと思ってサンプルを見るとここではすごい頑張ってますね STREAM クラスを使う時に渡すものについてあれこれやってますねどうかなんかがする時に引数何個いる関数なのかっていうのを見て何個の場合にはシードの値を渡すとかといろいろ頑張ってますね空いてそういう目にあった場合には
transcript 0: ちゃんと個数 L 判定はチルダですね3は整数に入る大戦争でやると反転した値が出るんでなるほどこの数字だけキッス個数7というのが分かるということですない使わないすか使わないでしょうね僕を見たことないしもうちょっと戻って弱いブロックブロックも来ない方って何ていう気はしなくはないんだけどここの表現で言うと弱い Block off ジャクソンを使わないようにしてますねばなるほどデリケートだからですねこけちゃうからなんか来てるんなら最初から鱗ですがなんとなく通過しちゃうよりはなるべく2 proc オブジェクトを使うことですかそうですねーなるほどーもそう思いますがブロックの引数とか頭とかは
transcript 0: 気にしなきゃいけないときはいっぱい弱いロックオブジェクトにしといた方が楽だと恋ドラマブロックの中身を定義するんじゃなくてブロック関数を定義するときとかはやらざるをえんのかなと思いますけれどもそうじゃない場合にはかもね今のご時世僕らとしてはキーワード引数がいいぜって言ってる事故人生においてこんな並びの引数になったらもう3と呼べるかどうしてする以外は俺は許さんぞっていうのはわかる気がします何だっけなこれと昔ないルビーの18は確かブロック8 lambda proc オブジェクトのデフォルト引数が定義できなかったのような気がするんですよねキーワード引数がデフォルト値は7ですよねキーワードますね何かその辺が僕実はその返事とはできる頃からルミネ入ったんですよそうすると逆に子さんの
transcript 0: ルビーの人があと10個の引数の意味が分かんないんだけどって言われたことは7面カット境涯をそういうことかてでこれが出来るのは今時の子なんだっていうのお届けした記憶がありますそののでボルト引数が定義できないから数が合わないと大変面倒くさいみたいな手を振って走れる奴はそれなやつがみたいなことになるんじゃないのかなという気がするんですよねそので Ruby 19以降の世界だったらいらないんじゃないこれいちいち覚えなくていいって言ってますけどねあのメールの龍のヘルパーの引き続き大変じゃないですかどこまでが引数でどこまでがオプションでどこまでがなんとか出てもさっぱり分からんって誰の引数の読み方とか分かった時に初めて RB ってこんな風に書かんといかんのう
transcript 0: なんでなんと思った時に昔は書けなかったんだよっていうの聞いてそれで GO 統合的に考えたらこうなっちゃったんだっていうのはうまく行った結果はなったんだと思うけどなるほどなーと思ったけど来ないんだそんなわけであり皆さんは行きメソッドを使って歩数を取って引数の数チェックしてくださいと連絡入っておりを使うのはいいとして正直ここで口の数が出てくる場合は何か他の使い方間違えてませんから次へ最後項目35モジュールのプリペイドを使う時には慎重に考えようと食器を止めさんがそうですねもうこれプリペンドって何っていう話なんですけど include の逆 include 的な発想で何の役に立つとかピンと来ないと思って
transcript 0: 起こる現象で先に説明するとまずインフルだって言うのママ思い出せませんですけど include の場合は例えばくら寿司の中に include A include dir とはどういう計ショーツになるかっていうとクラスの C include A include p なんでインクルードは自分の上にクラスが入るだからくら寿司の上にまず b が入ってその後に体がそうなるほど実行順序で言うと暮らす資格取って include A って書いたら貧しいの上に柄が入るとだから順番は7時になってその次さらに include ピーて掻くと爪に火が入るんで CBA オブジェクトという順番になりますこれが来ると音でプリペイドっていうのはその逆でなんと自分のお尻につく
transcript 0: なのでくら寿司プリペンド appended で書くとどうなるかっていうとまず C の子に映画できていいの後に be ができるんで継承ツリーは bac オブジェクトになると当然メソッドを探す順番にはくら寿司プリペンド a b って書いてあったらメソッド探す順番は PAC ナルト include だとして自分の上に入ってるんでまず自分次に親とのお家で遊んでいる場合は CBA だけどプリペイドの場合は PC という順序になるとて何に使うんで言うと竹ノメソッド乗ってるよね自分のクラスを最優先に読んでほしいんじゃなくてプリペイドしたメソッドを先に探して欲しいっていう場合にはこれを2
transcript 0: この方が嬉しいことがあるんですよっていうことらしいですがそれはプリペンド薬で座っているのかなんかあるんすかこれさっきのね優人会とメソッドチェーンエリアスってどういうことかです高いスーパーを読んでから自分を実行するっていうのプリペンドしてあげるあはははそういうことかといえば自分の中に定義してるとアルティメットがあったしたらそのメソッドのデバッグ版を入れたいとかなんとかばんを入れたいって行った場合インフルどっち行っちゃうと自分自身に定義されている場合はどうにもなんないけどプリペンドってやってると浮気してくれるとそれほどねだからまあそういうプリペンドで自分のメソッド上書きしてなんとかばんを使いたいとかこの場合はこれで浮気するって場合にはプリペイド使いましょうととくね
transcript 0: 貫通その元のクラスのやつをスーパーで読めるんではいはいはいはい僕らすってのはここで言うとクラス C ですねそうですねくら寿司プリプリベイビーて書いてプリペンド B のメソッドの中にスーパーって書いてるとこの順序だと B のスーパーは A でいいのスーパーは C だからそういう風にすれば自分のを辞めるとかそんな感じで後プリペンドもプリ pen で撮ってフックがあるんでうまいこと使ってくださいよっていうことでメタプログラミングのショーは終了ですよ楽しいですねでもこれやらないという日じゃないよねって彼はどうしてもよくありますね一番と思ったなとこですからこんな感じで意外な感じがそういやほんとそうですよねでも本当なんでですか
transcript 0: シェパードが一時にモトクロスの情報にアクセスしたくなったら負けだなと思ったんですけどまぁでもアクセスできるんだよっていう前提の世界で生きるとこういう効率的な事ができるんだよっていうのも分かっているほどなぁと思わされる子だったねあとはもうムーアの法則頑張れの世代ですよねそれだったらこうをかけるのになんでこんな市篠籠田3日間何もやることたくさんありますメタプログラミングじゃなくてソースコードを書くツールとなりますもんね ID とかま言ってみればウェールズの cli 文字色そうですもね同じこと書かなくていいようにするにやらせてるだけで掃除されたプログラムですねライブ source CODE それを作らなくてもいいようにはできてますけど外ではそんな感じで今日は会えますかはいつぎ第6章 testing
transcript 0: 終わりましたよ醍醐支所前買ったんで次678で終わりです次キャスティングはなんと4項目で終わりです何してますね次のツールとライブラリも4項目テストテストテスト判定テストなんてユニットテストになるよスペックテストになれよってこんな感じですか癒される感じですか医者さんと化した次は6章となると一気に行ってもいいかもしれないしねなるほどアイじゃあ今日は一時間半お喋ったんでこれぐらいではいありがとう今日はどうもありがとうございましたありがとうございます様です
